{
	"id": "90ba89ad7f76db3d01446cf1e6b4ba03",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"v2-core-master/contracts/FeeToSetter.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2020-09-16\r\n*/\r\n\r\npragma solidity ^0.5.16;\r\n\r\n// this contract serves as feeToSetter, allowing owner to manage fees in the context of a specific feeTo implementation\r\ncontract FeeToSetter {\r\n    // immutables\r\n    address public factory;\r\n    uint public vestingEnd;\r\n    address public feeTo;\r\n\r\n    address public owner;\r\n\r\n    constructor(address factory_, uint vestingEnd_, address owner_, address feeTo_) public {\r\n        require(vestingEnd_ > block.timestamp, 'FeeToSetter::constructor: vesting must end after deployment');\r\n        factory = factory_;\r\n        vestingEnd = vestingEnd_;\r\n        owner = owner_;\r\n        feeTo = feeTo_;\r\n    }\r\n\r\n    // allows owner to change itself at any time\r\n    function setOwner(address owner_) public {\r\n        require(msg.sender == owner, 'FeeToSetter::setOwner: not allowed');\r\n        owner = owner_;\r\n    }\r\n\r\n    // allows owner to change feeToSetter after vesting\r\n    function setFeeToSetter(address feeToSetter_) public {\r\n        require(block.timestamp >= vestingEnd, 'FeeToSetter::setFeeToSetter: not time yet');\r\n        require(msg.sender == owner, 'FeeToSetter::setFeeToSetter: not allowed');\r\n        IUniswapV2Factory(factory).setFeeToSetter(feeToSetter_);\r\n    }\r\n\r\n    // allows owner to turn fees on/off after vesting\r\n    function toggleFees(bool on) public {\r\n        require(block.timestamp >= vestingEnd, 'FeeToSetter::toggleFees: not time yet');\r\n        require(msg.sender == owner, 'FeeToSetter::toggleFees: not allowed');\r\n        IUniswapV2Factory(factory).setFeeTo(on ? feeTo : address(0));\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function setFeeToSetter(address) external;\r\n    function setFeeTo(address) external;\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"v2-core-master/contracts/FeeToSetter.sol": {
				"FeeToSetter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factory_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "vestingEnd_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "feeTo_",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "feeToSetter_",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bool",
									"name": "on",
									"type": "bool"
								}
							],
							"name": "toggleFees",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "vestingEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"v2-core-master/contracts/FeeToSetter.sol\":220:1632  contract FeeToSetter {\r... */\n  mstore(0x40, 0x80)\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":383:704  constructor(address factory_, uint vestingEnd_, address owner_, address feeTo_) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":383:704  constructor(address factory_, uint vestingEnd_, address owner_, address feeTo_) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0x80\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":383:704  constructor(address factory_, uint vestingEnd_, address owner_, address feeTo_) public {\r... */\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup4\n  add\n  mload\n  0x60\n  swap1\n  swap4\n  add\n  mload\n  swap2\n  swap3\n  swap1\n  swap2\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":503:518  block.timestamp */\n  timestamp\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":489:518  vestingEnd_ > block.timestamp */\n  dup4\n  gt\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":481:582  require(vestingEnd_ > block.timestamp, 'FeeToSetter::constructor: vesting must end after deployment') */\n  tag_5\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x3b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_fdf0f7b9f310dd6831811f6ed102504e8689d888b3abcbbe644d0f572d3aa063\n  0x3b\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":593:600  factory */\n  0x00\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":593:611  factory = factory_ */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  dup7\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":622:646  vestingEnd = vestingEnd_ */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":657:662  owner */\n  0x03\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":657:671  owner = owner_ */\n  dup1\n  sload\n  swap3\n  dup6\n  and\n  swap3\n  dup5\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":682:687  feeTo */\n  0x02\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":682:696  feeTo = feeTo_ */\n  dup1\n  sload\n  swap2\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"v2-core-master/contracts/FeeToSetter.sol\":220:1632  contract FeeToSetter {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_fdf0f7b9f310dd6831811f6ed102504e8689d888b3abcbbe644d0f572d3aa063 466565546f5365747465723a3a636f6e7374727563746f723a2076657374696e67206d75737420656e64206166746572206465706c6f796d656e74\n\nsub_0: assembly {\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":220:1632  contract FeeToSetter {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":220:1632  contract FeeToSetter {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa2e74af6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa69ea776\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x017e7e58\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13af4035\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x84a1931f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":325:345  address public feeTo */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":762:913  function setOwner(address owner_) public {\r... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n      pop\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":762:913  function setOwner(address owner_) public {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_15\n      jump\t// in\n    tag_13:\n      stop\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":296:318  uint public vestingEnd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":354:374  address public owner */\n    tag_6:\n      tag_11\n      tag_19\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":978:1282  function setFeeToSetter(address feeToSetter_) public {\r... */\n    tag_7:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n      pop\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":978:1282  function setFeeToSetter(address feeToSetter_) public {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_22\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1345:1629  function toggleFees(bool on) public {\r... */\n    tag_8:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n      pop\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1345:1629  function toggleFees(bool on) public {\r... */\n      calldataload\n      iszero\n      iszero\n      tag_25\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":267:289  address public factory */\n    tag_9:\n      tag_11\n      tag_27\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":325:345  address public feeTo */\n    tag_12:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":762:913  function setOwner(address owner_) public {\r... */\n    tag_15:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":836:841  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":822:832  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":822:841  msg.sender == owner */\n      eq\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":814:880  require(msg.sender == owner, 'FeeToSetter::setOwner: not allowed') */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e551fe4035a057c6fc549b98884c58c7c9c64f5abd2b2e2ef64692a4e8af7583\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":891:896  owner */\n      0x03\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":891:905  owner = owner_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":762:913  function setOwner(address owner_) public {\r... */\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":296:318  uint public vestingEnd */\n    tag_17:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":354:374  address public owner */\n    tag_19:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":978:1282  function setFeeToSetter(address feeToSetter_) public {\r... */\n    tag_22:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1069:1079  vestingEnd */\n      sload(0x01)\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1050:1065  block.timestamp */\n      timestamp\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1050:1079  block.timestamp >= vestingEnd */\n      lt\n      iszero\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1042:1125  require(block.timestamp >= vestingEnd, 'FeeToSetter::setFeeToSetter: not time yet') */\n      tag_31\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4910d84aaa25e9c0a011002e287dbe144c3d39000fddc04ab7f72702c55c90b5\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1158:1163  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1144:1154  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1144:1163  msg.sender == owner */\n      eq\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1136:1208  require(msg.sender == owner, 'FeeToSetter::setFeeToSetter: not allowed') */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6c3dd794ea6d620763ca35d7419278f8b1943da52338944e50531161ae13c7dc\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1237:1244  factory */\n      0x00\n      dup1\n      sload\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1219:1274  IUniswapV2Factory(factory).setFeeToSetter(feeToSetter_) */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x5173a57b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1237:1244  factory */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1219:1260  IUniswapV2Factory(factory).setFeeToSetter */\n      0xa2e74af6\n      swap3\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1219:1274  IUniswapV2Factory(factory).setFeeToSetter(feeToSetter_) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1237:1244  factory */\n      dup4\n      dup8\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1219:1274  IUniswapV2Factory(factory).setFeeToSetter(feeToSetter_) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1219:1274  IUniswapV2Factory(factory).setFeeToSetter(feeToSetter_) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1219:1274  IUniswapV2Factory(factory).setFeeToSetter(feeToSetter_) */\n      pop\n      pop\n      pop\n      pop\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":978:1282  function setFeeToSetter(address feeToSetter_) public {\r... */\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1345:1629  function toggleFees(bool on) public {\r... */\n    tag_25:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1419:1429  vestingEnd */\n      sload(0x01)\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1400:1415  block.timestamp */\n      timestamp\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1400:1429  block.timestamp >= vestingEnd */\n      lt\n      iszero\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1392:1471  require(block.timestamp >= vestingEnd, 'FeeToSetter::toggleFees: not time yet') */\n      tag_36\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4629354d289e140d82720501f6a220f2d7436e24f3add5a3f74cf16f9142e9f6\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1504:1509  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1490:1500  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1490:1509  msg.sender == owner */\n      eq\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1482:1550  require(msg.sender == owner, 'FeeToSetter::toggleFees: not allowed') */\n      tag_37\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_69f0fe33328fcf87fcc722e32edf28546f10d20fdc8675aaf57fadd4b8514832\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1579:1586  factory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1561:1596  IUniswapV2Factory(factory).setFeeTo */\n      0xf46901ed\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1597:1599  on */\n      dup3\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1597:1620  on ? feeTo : address(0) */\n      tag_38\n      jumpi\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1618:1619  0 */\n      0x00\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1597:1620  on ? feeTo : address(0) */\n      jump(tag_39)\n    tag_38:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1602:1607  feeTo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1597:1620  on ? feeTo : address(0) */\n    tag_39:\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":1561:1621  IUniswapV2Factory(factory).setFeeTo(on ? feeTo : address(0)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"v2-core-master/contracts/FeeToSetter.sol\":267:289  address public factory */\n    tag_27:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n    stop\n    data_4629354d289e140d82720501f6a220f2d7436e24f3add5a3f74cf16f9142e9f6 466565546f5365747465723a3a746f67676c65466565733a206e6f742074696d6520796574\n    data_4910d84aaa25e9c0a011002e287dbe144c3d39000fddc04ab7f72702c55c90b5 466565546f5365747465723a3a736574466565546f5365747465723a206e6f742074696d6520796574\n    data_69f0fe33328fcf87fcc722e32edf28546f10d20fdc8675aaf57fadd4b8514832 466565546f5365747465723a3a746f67676c65466565733a206e6f7420616c6c6f776564\n    data_6c3dd794ea6d620763ca35d7419278f8b1943da52338944e50531161ae13c7dc 466565546f5365747465723a3a736574466565546f5365747465723a206e6f7420616c6c6f776564\n    data_e551fe4035a057c6fc549b98884c58c7c9c64f5abd2b2e2ef64692a4e8af7583 466565546f5365747465723a3a7365744f776e65723a206e6f7420616c6c6f776564\n\n    auxdata: 0xa265627a7a72315820c45dd9b6c89835b5f47bd74b7f996f394744a5cc2c177bc356284bf7f5528ca964736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105cd3803806105cd8339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151919290914283116100885760405162461bcd60e51b815260040180806020018281038252603b815260200180610592603b913960400191505060405180910390fd5b600080546001600160a01b039586166001600160a01b0319918216179091556001939093556003805492851692841692909217909155600280549190931691161790556104b8806100da6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e8578063a2e74af6146100f0578063a69ea77614610116578063c45a0155146101355761007d565b8063017e7e581461008257806313af4035146100a657806384a1931f146100ce575b600080fd5b61008a61013d565b604080516001600160a01b039092168252519081900360200190f35b6100cc600480360360208110156100bc57600080fd5b50356001600160a01b031661014c565b005b6100d66101b7565b60408051918252519081900360200190f35b61008a6101bd565b6100cc6004803603602081101561010657600080fd5b50356001600160a01b03166101cc565b6100cc6004803603602081101561012c57600080fd5b503515156102bc565b61008a6103b8565b6002546001600160a01b031681565b6003546001600160a01b031633146101955760405162461bcd60e51b81526004018080602001828103825260228152602001806104626022913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60015481565b6003546001600160a01b031681565b60015442101561020d5760405162461bcd60e51b81526004018080602001828103825260298152602001806103ed6029913960400191505060405180910390fd5b6003546001600160a01b031633146102565760405162461bcd60e51b815260040180806020018281038252602881526020018061043a6028913960400191505060405180910390fd5b6000805460408051635173a57b60e11b81526001600160a01b0385811660048301529151919092169263a2e74af6926024808201939182900301818387803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b5050505050565b6001544210156102fd5760405162461bcd60e51b81526004018080602001828103825260258152602001806103c86025913960400191505060405180910390fd5b6003546001600160a01b031633146103465760405162461bcd60e51b81526004018080602001828103825260248152602001806104166024913960400191505060405180910390fd5b6000546001600160a01b031663f46901ed82610363576000610370565b6002546001600160a01b03165b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156102a157600080fd5b6000546001600160a01b03168156fe466565546f5365747465723a3a746f67676c65466565733a206e6f742074696d6520796574466565546f5365747465723a3a736574466565546f5365747465723a206e6f742074696d6520796574466565546f5365747465723a3a746f67676c65466565733a206e6f7420616c6c6f776564466565546f5365747465723a3a736574466565546f5365747465723a206e6f7420616c6c6f776564466565546f5365747465723a3a7365744f776e65723a206e6f7420616c6c6f776564a265627a7a72315820c45dd9b6c89835b5f47bd74b7f996f394744a5cc2c177bc356284bf7f5528ca964736f6c63430005100032466565546f5365747465723a3a636f6e7374727563746f723a2076657374696e67206d75737420656e64206166746572206465706c6f796d656e74",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5CD CODESIZE SUB DUP1 PUSH2 0x5CD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 TIMESTAMP DUP4 GT PUSH2 0x88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x592 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x4B8 DUP1 PUSH2 0xDA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA69EA776 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x135 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x84A1931F EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x1BD JUMP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC JUMP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x8A PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x462 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3ED PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x43A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5173A57B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xA2E74AF6 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x416 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF46901ED DUP3 PUSH2 0x363 JUMPI PUSH1 0x0 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID CHAINID PUSH6 0x65546F536574 PUSH21 0x65723A3A746F67676C65466565733A206E6F742074 PUSH10 0x6D652079657446656554 PUSH16 0x5365747465723A3A736574466565546F MSTORE8 PUSH6 0x747465723A20 PUSH15 0x6F742074696D652079657446656554 PUSH16 0x5365747465723A3A746F67676C654665 PUSH6 0x733A206E6F74 KECCAK256 PUSH2 0x6C6C PUSH16 0x776564466565546F5365747465723A3A PUSH20 0x6574466565546F5365747465723A206E6F742061 PUSH13 0x6C6F776564466565546F536574 PUSH21 0x65723A3A7365744F776E65723A206E6F7420616C6C PUSH16 0x776564A265627A7A72315820C45DD9B6 0xC8 SWAP9 CALLDATALOAD 0xB5 DELEGATECALL PUSH28 0xD74B7F996F394744A5CC2C177BC356284BF7F5528CA964736F6C6343 STOP SDIV LT STOP ORIGIN CHAINID PUSH6 0x65546F536574 PUSH21 0x65723A3A636F6E7374727563746F723A2076657374 PUSH10 0x6E67206D75737420656E PUSH5 0x2061667465 PUSH19 0x206465706C6F796D656E740000000000000000 ",
							"sourceMap": "220:1412:0:-;;;383:321;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:321:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;383:321:0;;;;;;;;;;;;;;;;;;;503:15;489:29;;481:101;;;;-1:-1:-1;;;481:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:7;:18;;-1:-1:-1;;;;;593:18:0;;;-1:-1:-1;;;;;;593:18:0;;;;;;;;622:24;;;;657:5;:14;;;;;;;;;;;;;;;682:5;:14;;;;;;;;;;;220:1412;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e8578063a2e74af6146100f0578063a69ea77614610116578063c45a0155146101355761007d565b8063017e7e581461008257806313af4035146100a657806384a1931f146100ce575b600080fd5b61008a61013d565b604080516001600160a01b039092168252519081900360200190f35b6100cc600480360360208110156100bc57600080fd5b50356001600160a01b031661014c565b005b6100d66101b7565b60408051918252519081900360200190f35b61008a6101bd565b6100cc6004803603602081101561010657600080fd5b50356001600160a01b03166101cc565b6100cc6004803603602081101561012c57600080fd5b503515156102bc565b61008a6103b8565b6002546001600160a01b031681565b6003546001600160a01b031633146101955760405162461bcd60e51b81526004018080602001828103825260228152602001806104626022913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60015481565b6003546001600160a01b031681565b60015442101561020d5760405162461bcd60e51b81526004018080602001828103825260298152602001806103ed6029913960400191505060405180910390fd5b6003546001600160a01b031633146102565760405162461bcd60e51b815260040180806020018281038252602881526020018061043a6028913960400191505060405180910390fd5b6000805460408051635173a57b60e11b81526001600160a01b0385811660048301529151919092169263a2e74af6926024808201939182900301818387803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b5050505050565b6001544210156102fd5760405162461bcd60e51b81526004018080602001828103825260258152602001806103c86025913960400191505060405180910390fd5b6003546001600160a01b031633146103465760405162461bcd60e51b81526004018080602001828103825260248152602001806104166024913960400191505060405180910390fd5b6000546001600160a01b031663f46901ed82610363576000610370565b6002546001600160a01b03165b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156102a157600080fd5b6000546001600160a01b03168156fe466565546f5365747465723a3a746f67676c65466565733a206e6f742074696d6520796574466565546f5365747465723a3a736574466565546f5365747465723a206e6f742074696d6520796574466565546f5365747465723a3a746f67676c65466565733a206e6f7420616c6c6f776564466565546f5365747465723a3a736574466565546f5365747465723a206e6f7420616c6c6f776564466565546f5365747465723a3a7365744f776e65723a206e6f7420616c6c6f776564a265627a7a72315820c45dd9b6c89835b5f47bd74b7f996f394744a5cc2c177bc356284bf7f5528ca964736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA69EA776 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x135 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x84A1931F EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x1BD JUMP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC JUMP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x8A PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x462 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3ED PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x43A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5173A57B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xA2E74AF6 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x416 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF46901ED DUP3 PUSH2 0x363 JUMPI PUSH1 0x0 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID CHAINID PUSH6 0x65546F536574 PUSH21 0x65723A3A746F67676C65466565733A206E6F742074 PUSH10 0x6D652079657446656554 PUSH16 0x5365747465723A3A736574466565546F MSTORE8 PUSH6 0x747465723A20 PUSH15 0x6F742074696D652079657446656554 PUSH16 0x5365747465723A3A746F67676C654665 PUSH6 0x733A206E6F74 KECCAK256 PUSH2 0x6C6C PUSH16 0x776564466565546F5365747465723A3A PUSH20 0x6574466565546F5365747465723A206E6F742061 PUSH13 0x6C6F776564466565546F536574 PUSH21 0x65723A3A7365744F776E65723A206E6F7420616C6C PUSH16 0x776564A265627A7A72315820C45DD9B6 0xC8 SWAP9 CALLDATALOAD 0xB5 DELEGATECALL PUSH28 0xD74B7F996F394744A5CC2C177BC356284BF7F5528CA964736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "220:1412:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:1412:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:20;;;:::i;:::-;;;;-1:-1:-1;;;;;325:20:0;;;;;;;;;;;;;;762:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;762:151:0;-1:-1:-1;;;;;762:151:0;;:::i;:::-;;296:22;;;:::i;:::-;;;;;;;;;;;;;;;;354:20;;;:::i;978:304::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;978:304:0;-1:-1:-1;;;;;978:304:0;;:::i;1345:284::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1345:284:0;;;;:::i;267:22::-;;;:::i;325:20::-;;;-1:-1:-1;;;;;325:20:0;;:::o;762:151::-;836:5;;-1:-1:-1;;;;;836:5:0;822:10;:19;814:66;;;;-1:-1:-1;;;814:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:5;:14;;-1:-1:-1;;;;;;891:14:0;-1:-1:-1;;;;;891:14:0;;;;;;;;;;762:151::o;296:22::-;;;;:::o;354:20::-;;;-1:-1:-1;;;;;354:20:0;;:::o;978:304::-;1069:10;;1050:15;:29;;1042:83;;;;-1:-1:-1;;;1042:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1158:5;;-1:-1:-1;;;;;1158:5:0;1144:10;:19;1136:72;;;;-1:-1:-1;;;1136:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:7;;;1219:55;;;-1:-1:-1;;;1219:55:0;;-1:-1:-1;;;;;1219:55:0;;;;;;;;;1237:7;;;;;1219:41;;:55;;;;;;;;;;;1237:7;;1219:55;;;5:2:-1;;;;30:1;27;20:12;5:2;1219:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1219:55:0;;;;978:304;:::o;1345:284::-;1419:10;;1400:15;:29;;1392:79;;;;-1:-1:-1;;;1392:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:5;;-1:-1:-1;;;;;1504:5:0;1490:10;:19;1482:68;;;;-1:-1:-1;;;1482:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1579:7;;-1:-1:-1;;;;;1579:7:0;1561:35;1597:2;:23;;1618:1;1597:23;;;1602:5;;-1:-1:-1;;;;;1602:5:0;1597:23;1561:60;;;;;;;;;;;;;-1:-1:-1;;;;;1561:60:0;-1:-1:-1;;;;;1561:60:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;267:22:0;;;-1:-1:-1;;;;;267:22:0;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "241600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"factory()": "1103",
								"feeTo()": "1038",
								"owner()": "1037",
								"setFeeToSetter(address)": "infinite",
								"setOwner(address)": "infinite",
								"toggleFees(bool)": "infinite",
								"vestingEnd()": "1043"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 1632,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "MSTORE"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "POP"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "MLOAD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "PUSHSIZE"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "CODESIZE"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "SUB"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "DUP1"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "PUSHSIZE"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "DUP4"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "CODECOPY"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "DUP2"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "DUP2"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "ADD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 16,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 17,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "DUP1"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "MLOAD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "DUP3"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "ADD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "MLOAD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "DUP4"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "ADD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "MLOAD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "SWAP1"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "SWAP4"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "ADD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "MLOAD"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "SWAP2"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "SWAP3"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "SWAP1"
								},
								{
									"begin": 383,
									"end": 704,
									"name": "SWAP2"
								},
								{
									"begin": 503,
									"end": 518,
									"name": "TIMESTAMP"
								},
								{
									"begin": 489,
									"end": 518,
									"name": "DUP4"
								},
								{
									"begin": 489,
									"end": 518,
									"name": "GT"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "JUMPI"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "MSTORE"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "ADD"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP1"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP1"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "ADD"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP3"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "SUB"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP3"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "MSTORE"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH",
									"value": "3B"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "MSTORE"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "ADD"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP1"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH data",
									"value": "FDF0F7B9F310DD6831811F6ED102504E8689D888B3ABCBBE644D0F572D3AA063"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH",
									"value": "3B"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "SWAP2"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "CODECOPY"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "ADD"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "SWAP2"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "POP"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "POP"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "MLOAD"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "DUP1"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "SWAP2"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "SUB"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "SWAP1"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "REVERT"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 481,
									"end": 582,
									"name": "JUMPDEST"
								},
								{
									"begin": 593,
									"end": 600,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "DUP1"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SWAP6"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "DUP7"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SWAP2"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "DUP3"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "AND"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "OR"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SWAP1"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SWAP2"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SSTORE"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 622,
									"end": 646,
									"name": "SWAP4"
								},
								{
									"begin": 622,
									"end": 646,
									"name": "SWAP1"
								},
								{
									"begin": 622,
									"end": 646,
									"name": "SWAP4"
								},
								{
									"begin": 622,
									"end": 646,
									"name": "SSTORE"
								},
								{
									"begin": 657,
									"end": 662,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "DUP1"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SLOAD"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SWAP3"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "DUP6"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "AND"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SWAP3"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "DUP5"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "AND"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SWAP3"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SWAP3"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "OR"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SWAP2"
								},
								{
									"begin": 657,
									"end": 671,
									"name": "SSTORE"
								},
								{
									"begin": 682,
									"end": 687,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "DUP1"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "SLOAD"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "SWAP2"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "SWAP1"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "SWAP4"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "AND"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "SWAP2"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "AND"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "OR"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "SWAP1"
								},
								{
									"begin": 682,
									"end": 696,
									"name": "SSTORE"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "DUP1"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "CODECOPY"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1632,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c45dd9b6c89835b5f47bd74b7f996f394744a5cc2c177bc356284bf7f5528ca964736f6c63430005100032",
									".code": [
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "LT"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "SHR"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "GT"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "EQ"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "A2E74AF6"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "EQ"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "A69EA776"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "EQ"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "EQ"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMP"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "17E7E58"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "EQ"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "EQ"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "84A1931F"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "EQ"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 1632,
											"name": "REVERT"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "SWAP3"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "AND"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "DUP3"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "MSTORE"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "MLOAD"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "SUB"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "RETURN"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "JUMPDEST"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "DUP1"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "AND"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "JUMPDEST"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "STOP"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "JUMPDEST"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "JUMPDEST"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "DUP1"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "MLOAD"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "SWAP2"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "DUP3"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "MSTORE"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "MLOAD"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "DUP2"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "SUB"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "ADD"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "RETURN"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "AND"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "JUMPDEST"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "ISZERO"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "ISZERO"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "JUMPDEST"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "AND"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 325,
											"end": 345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "JUMPDEST"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "AND"
										},
										{
											"begin": 822,
											"end": 832,
											"name": "CALLER"
										},
										{
											"begin": 822,
											"end": 841,
											"name": "EQ"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "JUMPI"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP2"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "MSTORE"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP3"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP2"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "SUB"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP3"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "MSTORE"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP2"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "MSTORE"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH data",
											"value": "E551FE4035A057C6FC549B98884C58C7C9C64F5ABD2B2E2EF64692A4E8AF7583"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "SWAP2"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "CODECOPY"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "SWAP2"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "MLOAD"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "SWAP2"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "SUB"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "REVERT"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 814,
											"end": 880,
											"name": "JUMPDEST"
										},
										{
											"begin": 891,
											"end": 896,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "DUP1"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SWAP3"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SWAP1"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SWAP3"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "AND"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SWAP2"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SWAP1"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SWAP2"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "OR"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SWAP1"
										},
										{
											"begin": 891,
											"end": 905,
											"name": "SSTORE"
										},
										{
											"begin": 762,
											"end": 913,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "JUMPDEST"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "SLOAD"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "DUP2"
										},
										{
											"begin": 296,
											"end": 318,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "AND"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "DUP2"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "SLOAD"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1050,
											"end": 1079,
											"name": "LT"
										},
										{
											"begin": 1050,
											"end": 1079,
											"name": "ISZERO"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "JUMPI"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "MSTORE"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "ADD"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP1"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP1"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "ADD"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP3"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "SUB"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP3"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "MSTORE"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "MSTORE"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "ADD"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP1"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH data",
											"value": "4910D84AAA25E9C0A011002E287DBE144C3D39000FDDC04AB7F72702C55C90B5"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "SWAP2"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "CODECOPY"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "ADD"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "SWAP2"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "POP"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "POP"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "MLOAD"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "DUP1"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "SWAP2"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "SUB"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "SWAP1"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "REVERT"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1042,
											"end": 1125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1158,
											"end": 1163,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1158,
											"end": 1163,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1158,
											"end": 1163,
											"name": "AND"
										},
										{
											"begin": 1144,
											"end": 1154,
											"name": "CALLER"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "EQ"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "JUMPI"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP3"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "SUB"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP3"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH data",
											"value": "6C3DD794EA6D620763CA35D7419278F8B1943DA52338944E50531161AE13C7DC"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "CODECOPY"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "SUB"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "REVERT"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1136,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "DUP1"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "SLOAD"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "5173A57B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP6"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "AND"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP4"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "MSTORE"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "MLOAD"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "SWAP2"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "SWAP3"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "AND"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "SWAP3"
										},
										{
											"begin": 1219,
											"end": 1260,
											"name": "PUSH",
											"value": "A2E74AF6"
										},
										{
											"begin": 1219,
											"end": 1260,
											"name": "SWAP3"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP3"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "SWAP4"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP3"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "SUB"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "DUP4"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "DUP8"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "GAS"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "CALL"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1345,
											"end": 1629,
											"name": "JUMPDEST"
										},
										{
											"begin": 1419,
											"end": 1429,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1419,
											"end": 1429,
											"name": "SLOAD"
										},
										{
											"begin": 1400,
											"end": 1415,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1400,
											"end": 1429,
											"name": "LT"
										},
										{
											"begin": 1400,
											"end": 1429,
											"name": "ISZERO"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "JUMPI"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "MSTORE"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP1"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP1"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP3"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "SUB"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP3"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "MSTORE"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "MSTORE"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP1"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH data",
											"value": "4629354D289E140D82720501F6A220F2D7436E24F3ADD5A3F74CF16F9142E9F6"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "SWAP2"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "CODECOPY"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "SWAP2"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "POP"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "POP"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "MLOAD"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "DUP1"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "SWAP2"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "SUB"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "REVERT"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1392,
											"end": 1471,
											"name": "JUMPDEST"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "AND"
										},
										{
											"begin": 1490,
											"end": 1500,
											"name": "CALLER"
										},
										{
											"begin": 1490,
											"end": 1509,
											"name": "EQ"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPI"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP3"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP3"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH data",
											"value": "69F0FE33328FCF87FCC722E32EDF28546F10D20FDC8675AAF57FADD4B8514832"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "CODECOPY"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "REVERT"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "AND"
										},
										{
											"begin": 1561,
											"end": 1596,
											"name": "PUSH",
											"value": "F46901ED"
										},
										{
											"begin": 1597,
											"end": 1599,
											"name": "DUP3"
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "JUMPI"
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "JUMP"
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "JUMPDEST"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "AND"
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "JUMPDEST"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "MLOAD"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP3"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "AND"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "SHL"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP2"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "MSTORE"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "ADD"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP1"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "AND"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP2"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "MSTORE"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "ADD"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "SWAP2"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "MLOAD"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP1"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP4"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "SUB"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP2"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP8"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "DUP1"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1561,
											"end": 1621,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "JUMPDEST"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "AND"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "DUP2"
										},
										{
											"begin": 267,
											"end": 289,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"4629354D289E140D82720501F6A220F2D7436E24F3ADD5A3F74CF16F9142E9F6": "466565546f5365747465723a3a746f67676c65466565733a206e6f742074696d6520796574",
										"4910D84AAA25E9C0A011002E287DBE144C3D39000FDDC04AB7F72702C55C90B5": "466565546f5365747465723a3a736574466565546f5365747465723a206e6f742074696d6520796574",
										"69F0FE33328FCF87FCC722E32EDF28546F10D20FDC8675AAF57FADD4B8514832": "466565546f5365747465723a3a746f67676c65466565733a206e6f7420616c6c6f776564",
										"6C3DD794EA6D620763CA35D7419278F8B1943DA52338944E50531161AE13C7DC": "466565546f5365747465723a3a736574466565546f5365747465723a206e6f7420616c6c6f776564",
										"E551FE4035A057C6FC549B98884C58C7C9C64F5ABD2B2E2EF64692A4E8AF7583": "466565546f5365747465723a3a7365744f776e65723a206e6f7420616c6c6f776564"
									}
								},
								"FDF0F7B9F310DD6831811F6ED102504E8689D888B3ABCBBE644D0F572D3AA063": "466565546f5365747465723a3a636f6e7374727563746f723a2076657374696e67206d75737420656e64206166746572206465706c6f796d656e74"
							}
						},
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"feeTo()": "017e7e58",
							"owner()": "8da5cb5b",
							"setFeeToSetter(address)": "a2e74af6",
							"setOwner(address)": "13af4035",
							"toggleFees(bool)": "a69ea776",
							"vestingEnd()": "84a1931f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vestingEnd_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeTo_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToSetter_\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"on\",\"type\":\"bool\"}],\"name\":\"toggleFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vestingEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/FeeToSetter.sol\":\"FeeToSetter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/FeeToSetter.sol\":{\"keccak256\":\"0x8718d57eb7e7ebe36cb47d9ee10fd360852861659beee84f358a8eeaaeb30b05\",\"urls\":[\"bzz-raw://fc11cad21d3f8acda5532c8eeea45dc9ff46f560798ba215316c3adaaf31e757\",\"dweb:/ipfs/QmeEnmFdvTnkpcYD2mDkxPmrAiPuYSDFCMMR8vCNfS6tA3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "v2-core-master/contracts/FeeToSetter.sol:FeeToSetter",
								"label": "factory",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "v2-core-master/contracts/FeeToSetter.sol:FeeToSetter",
								"label": "vestingEnd",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "v2-core-master/contracts/FeeToSetter.sol:FeeToSetter",
								"label": "feeTo",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "v2-core-master/contracts/FeeToSetter.sol:FeeToSetter",
								"label": "owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IUniswapV2Factory": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/FeeToSetter.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/FeeToSetter.sol\":{\"keccak256\":\"0x8718d57eb7e7ebe36cb47d9ee10fd360852861659beee84f358a8eeaaeb30b05\",\"urls\":[\"bzz-raw://fc11cad21d3f8acda5532c8eeea45dc9ff46f560798ba215316c3adaaf31e757\",\"dweb:/ipfs/QmeEnmFdvTnkpcYD2mDkxPmrAiPuYSDFCMMR8vCNfS6tA3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"v2-core-master/contracts/FeeToSetter.sol": {
				"ast": {
					"absolutePath": "v2-core-master/contracts/FeeToSetter.sol",
					"exportedSymbols": {
						"FeeToSetter": [
							127
						],
						"IUniswapV2Factory": [
							138
						]
					},
					"id": 139,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "71:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "FeeToSetter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "267:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "267:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "vestingEnd",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "296:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "296:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "feeTo",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "325:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "354:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "354:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "470:234:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 21,
																"name": "vestingEnd_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "489:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 22,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "503:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "503:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "489:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f5365747465723a3a636f6e7374727563746f723a2076657374696e67206d75737420656e64206166746572206465706c6f796d656e74",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "520:61:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fdf0f7b9f310dd6831811f6ed102504e8689d888b3abcbbe644d0f572d3aa063",
																"typeString": "literal_string \"FeeToSetter::constructor: vesting must end after deployment\""
															},
															"value": "FeeToSetter::constructor: vesting must end after deployment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fdf0f7b9f310dd6831811f6ed102504e8689d888b3abcbbe644d0f572d3aa063",
																"typeString": "literal_string \"FeeToSetter::constructor: vesting must end after deployment\""
															}
														],
														"id": 20,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															156,
															157
														],
														"referencedDeclaration": 157,
														"src": "481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "481:101:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "481:101:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 28,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 29,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "603:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "593:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "593:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 32,
														"name": "vestingEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "622:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 33,
														"name": "vestingEnd_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "635:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "622:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "622:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "657:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 37,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "665:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "657:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "657:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "feeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "682:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 41,
														"name": "feeTo_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "690:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "682:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "682:14:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "factory_",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "395:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"name": "vestingEnd_",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "413:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "431:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "feeTo_",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "394:68:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:0:0"
									},
									"scope": 127,
									"src": "383:321:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "803:110:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 51,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "822:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "822:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "836:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "822:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f5365747465723a3a7365744f776e65723a206e6f7420616c6c6f776564",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "843:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e551fe4035a057c6fc549b98884c58c7c9c64f5abd2b2e2ef64692a4e8af7583",
																"typeString": "literal_string \"FeeToSetter::setOwner: not allowed\""
															},
															"value": "FeeToSetter::setOwner: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e551fe4035a057c6fc549b98884c58c7c9c64f5abd2b2e2ef64692a4e8af7583",
																"typeString": "literal_string \"FeeToSetter::setOwner: not allowed\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															156,
															157
														],
														"referencedDeclaration": 157,
														"src": "814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "814:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 58,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "891:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "899:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "891:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "891:14:0"
											}
										]
									},
									"documentation": null,
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "779:16:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:0"
									},
									"scope": 127,
									"src": "762:151:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1031:251:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 69,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1050:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1050:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 71,
																"name": "vestingEnd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1069:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1050:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f5365747465723a3a736574466565546f5365747465723a206e6f742074696d6520796574",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1081:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4910d84aaa25e9c0a011002e287dbe144c3d39000fddc04ab7f72702c55c90b5",
																"typeString": "literal_string \"FeeToSetter::setFeeToSetter: not time yet\""
															},
															"value": "FeeToSetter::setFeeToSetter: not time yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4910d84aaa25e9c0a011002e287dbe144c3d39000fddc04ab7f72702c55c90b5",
																"typeString": "literal_string \"FeeToSetter::setFeeToSetter: not time yet\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															156,
															157
														],
														"referencedDeclaration": 157,
														"src": "1042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1042:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1144:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1144:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 79,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1158:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1144:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f5365747465723a3a736574466565546f5365747465723a206e6f7420616c6c6f776564",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1165:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3dd794ea6d620763ca35d7419278f8b1943da52338944e50531161ae13c7dc",
																"typeString": "literal_string \"FeeToSetter::setFeeToSetter: not allowed\""
															},
															"value": "FeeToSetter::setFeeToSetter: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3dd794ea6d620763ca35d7419278f8b1943da52338944e50531161ae13c7dc",
																"typeString": "literal_string \"FeeToSetter::setFeeToSetter: not allowed\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															156,
															157
														],
														"referencedDeclaration": 157,
														"src": "1136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1136:72:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 88,
															"name": "feeToSetter_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "1261:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 85,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "1237:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 84,
																"name": "IUniswapV2Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "1219:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$138_$",
																	"typeString": "type(contract IUniswapV2Factory)"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$138",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setFeeToSetter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 132,
														"src": "1219:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1219:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1219:55:0"
											}
										]
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"name": "feeToSetter_",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1002:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1001:22:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:0:0"
									},
									"scope": 127,
									"src": "978:304:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1381:248:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 98,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1400:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1400:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "vestingEnd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1419:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1400:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f5365747465723a3a746f67676c65466565733a206e6f742074696d6520796574",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1431:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4629354d289e140d82720501f6a220f2d7436e24f3add5a3f74cf16f9142e9f6",
																"typeString": "literal_string \"FeeToSetter::toggleFees: not time yet\""
															},
															"value": "FeeToSetter::toggleFees: not time yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4629354d289e140d82720501f6a220f2d7436e24f3add5a3f74cf16f9142e9f6",
																"typeString": "literal_string \"FeeToSetter::toggleFees: not time yet\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															156,
															157
														],
														"referencedDeclaration": 157,
														"src": "1392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1392:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 106,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1490:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1490:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1504:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1490:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f5365747465723a3a746f67676c65466565733a206e6f7420616c6c6f776564",
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1511:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69f0fe33328fcf87fcc722e32edf28546f10d20fdc8675aaf57fadd4b8514832",
																"typeString": "literal_string \"FeeToSetter::toggleFees: not allowed\""
															},
															"value": "FeeToSetter::toggleFees: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69f0fe33328fcf87fcc722e32edf28546f10d20fdc8675aaf57fadd4b8514832",
																"typeString": "literal_string \"FeeToSetter::toggleFees: not allowed\""
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															156,
															157
														],
														"referencedDeclaration": 157,
														"src": "1482:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1482:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"condition": {
																"argumentTypes": null,
																"id": 117,
																"name": "on",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "1597:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1618:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1610:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1597:23:0",
															"trueExpression": {
																"argumentTypes": null,
																"id": 118,
																"name": "feeTo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 114,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "1579:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 113,
																"name": "IUniswapV2Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "1561:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$138_$",
																	"typeString": "type(contract IUniswapV2Factory)"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1561:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$138",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setFeeTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 137,
														"src": "1561:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1561:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1561:60:0"
											}
										]
									},
									"documentation": null,
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toggleFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "on",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1365:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1364:9:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:0"
									},
									"scope": 127,
									"src": "1345:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 139,
							"src": "220:1412:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 138,
							"linearizedBaseContracts": [
								138
							],
							"name": "IUniswapV2Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1694:9:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1712:0:0"
									},
									"scope": 138,
									"src": "1671:42:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1737:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1736:9:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:0"
									},
									"scope": 138,
									"src": "1719:36:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 139,
							"src": "1636:122:0"
						}
					],
					"src": "71:1687:0"
				},
				"id": 0
			}
		}
	}
}