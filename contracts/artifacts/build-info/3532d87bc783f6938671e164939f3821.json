{
	"id": "3532d87bc783f6938671e164939f3821",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"v2-core-master/contracts/FeeTo.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2020-09-16\r\n*/\r\n\r\npragma solidity ^0.5.16;\r\n\r\n// this contract gives owner the ability to allow tokens. for pairs in which both tokens are allowed, fees may be\r\n// collected on that pair and send to feeRecipient, though only after burning all fees up to that point\r\ncontract FeeTo {\r\n    address public owner;\r\n    address public feeRecipient;\r\n\r\n    struct TokenAllowState {\r\n        bool    allowed;\r\n        uint128 disallowCount;\r\n    }\r\n    mapping(address => TokenAllowState) public tokenAllowStates;\r\n\r\n    struct PairAllowState {\r\n        uint128 token0DisallowCount;\r\n        uint128 token1DisallowCount;\r\n    }\r\n    mapping(address => PairAllowState) public pairAllowStates;\r\n\r\n    constructor(address owner_) public {\r\n        owner = owner_;\r\n    }\r\n\r\n    function setOwner(address owner_) public {\r\n        require(msg.sender == owner, 'FeeTo::setOwner: not allowed');\r\n        owner = owner_;\r\n    }\r\n\r\n    function setFeeRecipient(address feeRecipient_) public {\r\n        require(msg.sender == owner, 'FeeTo::setFeeRecipient: not allowed');\r\n        feeRecipient = feeRecipient_;\r\n    }\r\n\r\n    function updateTokenAllowState(address token, bool allowed) public {\r\n        require(msg.sender == owner, 'FeeTo::updateTokenAllowState: not allowed');\r\n        TokenAllowState storage tokenAllowState = tokenAllowStates[token];\r\n        // if allowed is not changing, the function is a no-op\r\n        if (allowed != tokenAllowState.allowed) {\r\n            tokenAllowState.allowed = allowed;\r\n            // this condition will only be true on the first call to this function (regardless of the value of allowed)\r\n            // by effectively initializing disallowCount to 1,\r\n            // we force renounce to be called for all pairs including newly allowed token\r\n            if (tokenAllowState.disallowCount == 0) {\r\n                tokenAllowState.disallowCount = 1;\r\n            } else if (allowed == false) {\r\n                tokenAllowState.disallowCount += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r\n        for (uint i; i < tokens.length; i++) {\r\n            updateTokenAllowState(tokens[i], allowed);\r\n        }\r\n    }\r\n\r\n    function renounce(address pair) public returns (uint value) {\r\n        PairAllowState storage pairAllowState = pairAllowStates[pair];\r\n        TokenAllowState storage token0AllowState = tokenAllowStates[IUniswapV2Pair(pair).token0()];\r\n        TokenAllowState storage token1AllowState = tokenAllowStates[IUniswapV2Pair(pair).token1()];\r\n\r\n        // we must renounce if any of the following four conditions are true:\r\n        // 1) token0 is currently disallowed\r\n        // 2) token1 is currently disallowed\r\n        // 3) token0 was disallowed at least once since the last time renounce was called\r\n        // 4) token1 was disallowed at least once since the last time renounce was called\r\n        if (\r\n            token0AllowState.allowed == false ||\r\n            token1AllowState.allowed == false ||\r\n            token0AllowState.disallowCount > pairAllowState.token0DisallowCount ||\r\n            token1AllowState.disallowCount > pairAllowState.token1DisallowCount\r\n        ) {\r\n            value = IUniswapV2Pair(pair).balanceOf(address(this));\r\n            if (value > 0) {\r\n                // burn balance into the pair, effectively redistributing underlying tokens pro-rata back to LPs\r\n                // (assert because transfer cannot fail with value as balanceOf)\r\n                assert(IUniswapV2Pair(pair).transfer(pair, value));\r\n                IUniswapV2Pair(pair).burn(pair);\r\n            }\r\n\r\n            // if token0 is allowed, we can now update the pair's disallow count to match the token's\r\n            if (token0AllowState.allowed) {\r\n                pairAllowState.token0DisallowCount = token0AllowState.disallowCount;\r\n            }\r\n            // if token1 is allowed, we can now update the pair's disallow count to match the token's\r\n            if (token1AllowState.allowed) {\r\n                pairAllowState.token1DisallowCount = token1AllowState.disallowCount;\r\n            }\r\n        }\r\n    }\r\n\r\n    function claim(address pair) public returns (uint value) {\r\n        PairAllowState storage pairAllowState = pairAllowStates[pair];\r\n        TokenAllowState storage token0AllowState = tokenAllowStates[IUniswapV2Pair(pair).token0()];\r\n        TokenAllowState storage token1AllowState = tokenAllowStates[IUniswapV2Pair(pair).token1()];\r\n\r\n        // we may claim only if each of the following five conditions are true:\r\n        // 1) token0 is currently allowed\r\n        // 2) token1 is currently allowed\r\n        // 3) renounce was not called since the last time token0 was disallowed\r\n        // 4) renounce was not called since the last time token1 was disallowed\r\n        // 5) feeHandler is not the 0 address\r\n        if (\r\n            token0AllowState.allowed &&\r\n            token1AllowState.allowed &&\r\n            token0AllowState.disallowCount == pairAllowState.token0DisallowCount &&\r\n            token1AllowState.disallowCount == pairAllowState.token1DisallowCount &&\r\n            feeRecipient != address(0)\r\n        ) {\r\n            value = IUniswapV2Pair(pair).balanceOf(address(this));\r\n            if (value > 0) {\r\n                // transfer tokens to the handler (assert because transfer cannot fail with value as balanceOf)\r\n                assert(IUniswapV2Pair(pair).transfer(feeRecipient, value));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Pair {\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"v2-core-master/contracts/FeeTo.sol": {
				"FeeTo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "pairAllowStates",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0DisallowCount",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1DisallowCount",
									"type": "uint128"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "renounce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "feeRecipient_",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenAllowStates",
							"outputs": [
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								},
								{
									"internalType": "uint128",
									"name": "disallowCount",
									"type": "uint128"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "updateTokenAllowState",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "updateTokenAllowStates",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"v2-core-master/contracts/FeeTo.sol\":319:5572  contract FeeTo {\r... */\n  mstore(0x40, 0x80)\n    /* \"v2-core-master/contracts/FeeTo.sol\":745:813  constructor(address owner_) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"v2-core-master/contracts/FeeTo.sol\":745:813  constructor(address owner_) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"v2-core-master/contracts/FeeTo.sol\":745:813  constructor(address owner_) public {\r... */\n  mload\n    /* \"v2-core-master/contracts/FeeTo.sol\":791:796  owner */\n  0x00\n    /* \"v2-core-master/contracts/FeeTo.sol\":791:805  owner = owner_ */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"v2-core-master/contracts/FeeTo.sol\":319:5572  contract FeeTo {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"v2-core-master/contracts/FeeTo.sol\":319:5572  contract FeeTo {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"v2-core-master/contracts/FeeTo.sol\":319:5572  contract FeeTo {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8d976172\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8d976172\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdf8ca76a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe359f0ed\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe74b981b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x13af4035\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e83409a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1f76a7af\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3e2f3f2b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"v2-core-master/contracts/FeeTo.sol\":821:966  function setOwner(address owner_) public {\r... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":821:966  function setOwner(address owner_) public {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"v2-core-master/contracts/FeeTo.sol\":4219:5569  function claim(address pair) public returns (uint value) {\r... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":4219:5569  function claim(address pair) public returns (uint value) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_19\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/FeeTo.sol\":2283:4211  function renounce(address pair) public returns (uint value) {\r... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":2283:4211  function renounce(address pair) public returns (uint value) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_22\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeTo.sol\":499:558  mapping(address => TokenAllowState) public tokenAllowStates */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":499:558  mapping(address => TokenAllowState) public tokenAllowStates */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_25\n      jump\t// in\n    tag_23:\n      0x40\n      dup1\n      mload\n      swap3\n      iszero\n      iszero\n      dup4\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/FeeTo.sol\":368:395  address public feeRecipient */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/FeeTo.sol\":2074:2275  function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r... */\n    tag_8:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2074:2275  function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r... */\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2074:2275  function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2074:2275  function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_32:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2074:2275  function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":81:97   */\n      swap3\n      add\n        /* \"--CODEGEN--\":74:101   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":2074:2275  function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r... */\n      swap3\n      swap6\n      pop\n      pop\n      pop\n      pop\n      calldataload\n      iszero\n      iszero\n      swap1\n      pop\n      tag_33\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeTo.sol\":341:361  address public owner */\n    tag_9:\n      tag_26\n      tag_35\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeTo.sol\":1162:2066  function updateTokenAllowState(address token, bool allowed) public {\r... */\n    tag_10:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":1162:2066  function updateTokenAllowState(address token, bool allowed) public {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_38\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeTo.sol\":679:736  mapping(address => PairAllowState) public pairAllowStates */\n    tag_11:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":679:736  mapping(address => PairAllowState) public pairAllowStates */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_41\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap2\n      swap1\n      swap3\n      and\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/FeeTo.sol\":974:1154  function setFeeRecipient(address feeRecipient_) public {\r... */\n    tag_12:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":974:1154  function setFeeRecipient(address feeRecipient_) public {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_44\n      jump\t// in\n        /* \"v2-core-master/contracts/FeeTo.sol\":821:966  function setOwner(address owner_) public {\r... */\n    tag_16:\n        /* \"v2-core-master/contracts/FeeTo.sol\":895:900  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"v2-core-master/contracts/FeeTo.sol\":881:891  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/FeeTo.sol\":881:900  msg.sender == owner */\n      eq\n        /* \"v2-core-master/contracts/FeeTo.sol\":873:933  require(msg.sender == owner, 'FeeTo::setOwner: not allowed') */\n      tag_46\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x466565546f3a3a7365744f776e65723a206e6f7420616c6c6f77656400000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_46:\n        /* \"v2-core-master/contracts/FeeTo.sol\":944:949  owner */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":944:958  owner = owner_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":821:966  function setOwner(address owner_) public {\r... */\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":4219:5569  function claim(address pair) public returns (uint value) {\r... */\n    tag_19:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4264:4274  uint value */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":4287:4324  PairAllowState storage pairAllowState */\n      dup1\n        /* \"v2-core-master/contracts/FeeTo.sol\":4327:4342  pairAllowStates */\n      0x03\n        /* \"v2-core-master/contracts/FeeTo.sol\":4327:4348  pairAllowStates[pair] */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":4343:4347  pair */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":4327:4348  pairAllowStates[pair] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"v2-core-master/contracts/FeeTo.sol\":4287:4348  PairAllowState storage pairAllowState = pairAllowStates[pair] */\n      swap1\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":4359:4399  TokenAllowState storage token0AllowState */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":4402:4418  tokenAllowStates */\n      0x02\n        /* \"v2-core-master/contracts/FeeTo.sol\":4402:4449  tokenAllowStates[IUniswapV2Pair(pair).token0()] */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":4434:4438  pair */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":4419:4446  IUniswapV2Pair(pair).token0 */\n      and\n      0x0dfe1681\n        /* \"v2-core-master/contracts/FeeTo.sol\":4419:4448  IUniswapV2Pair(pair).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4419:4448  IUniswapV2Pair(pair).token0() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4419:4448  IUniswapV2Pair(pair).token0() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4419:4448  IUniswapV2Pair(pair).token0() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":4402:4449  tokenAllowStates[IUniswapV2Pair(pair).token0()] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"v2-core-master/contracts/FeeTo.sol\":4359:4449  TokenAllowState storage token0AllowState = tokenAllowStates[IUniswapV2Pair(pair).token0()] */\n      swap1\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":4460:4500  TokenAllowState storage token1AllowState */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":4503:4519  tokenAllowStates */\n      0x02\n        /* \"v2-core-master/contracts/FeeTo.sol\":4503:4550  tokenAllowStates[IUniswapV2Pair(pair).token1()] */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":4535:4539  pair */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":4520:4547  IUniswapV2Pair(pair).token1 */\n      and\n      0xd21220a7\n        /* \"v2-core-master/contracts/FeeTo.sol\":4520:4549  IUniswapV2Pair(pair).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4520:4549  IUniswapV2Pair(pair).token1() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4520:4549  IUniswapV2Pair(pair).token1() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":4520:4549  IUniswapV2Pair(pair).token1() */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":4503:4550  tokenAllowStates[IUniswapV2Pair(pair).token1()] */\n      and\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":4520:4549  IUniswapV2Pair(pair).token1() */\n      0x20\n        /* \"v2-core-master/contracts/FeeTo.sol\":4503:4550  tokenAllowStates[IUniswapV2Pair(pair).token1()] */\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:4981  token0AllowState.allowed */\n      dup3\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":4503:4550  tokenAllowStates[IUniswapV2Pair(pair).token1()] */\n      swap1\n      swap2\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:4981  token0AllowState.allowed */\n      0xff\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:5022  token0AllowState.allowed &&\r... */\n      dup1\n      iszero\n      tag_54\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":4998:5022  token1AllowState.allowed */\n      dup1\n      sload\n      0xff\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:5022  token0AllowState.allowed &&\r... */\n    tag_54:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:5107  token0AllowState.allowed &&\r... */\n      dup1\n      iszero\n      tag_55\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":5073:5107  pairAllowState.token0DisallowCount */\n      dup3\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":5039:5069  token0AllowState.disallowCount */\n      dup3\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":5073:5107  pairAllowState.token0DisallowCount */\n      0x0100\n        /* \"v2-core-master/contracts/FeeTo.sol\":5039:5069  token0AllowState.disallowCount */\n      swap1\n      div\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":5073:5107  pairAllowState.token0DisallowCount */\n      swap2\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":5039:5107  token0AllowState.disallowCount == pairAllowState.token0DisallowCount */\n      eq\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:5107  token0AllowState.allowed &&\r... */\n    tag_55:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:5192  token0AllowState.allowed &&\r... */\n      dup1\n      iszero\n      tag_56\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":5158:5192  pairAllowState.token1DisallowCount */\n      dup3\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":5124:5154  token1AllowState.disallowCount */\n      dup2\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":5158:5192  pairAllowState.token1DisallowCount */\n      0x0100\n        /* \"v2-core-master/contracts/FeeTo.sol\":5124:5154  token1AllowState.disallowCount */\n      swap1\n      div\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      shl(0x80, 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":5158:5192  pairAllowState.token1DisallowCount */\n      swap1\n      swap3\n      div\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":5124:5192  token1AllowState.disallowCount == pairAllowState.token1DisallowCount */\n      eq\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:5192  token0AllowState.allowed &&\r... */\n    tag_56:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:5235  token0AllowState.allowed &&\r... */\n      dup1\n      iszero\n      tag_57\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":5209:5221  feeRecipient */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"v2-core-master/contracts/FeeTo.sol\":5209:5235  feeRecipient != address(0) */\n      iszero\n      iszero\n        /* \"v2-core-master/contracts/FeeTo.sol\":4957:5235  token0AllowState.allowed &&\r... */\n    tag_57:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4939:5562  if (\r... */\n      iszero\n      tag_66\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5315  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":5309:5313  this */\n      address\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5315  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5300  IUniswapV2Pair(pair).balanceOf */\n      dup8\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5315  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5300  IUniswapV2Pair(pair).balanceOf */\n      dup7\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5315  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5315  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_60:\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5315  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":5270:5315  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      mload\n      swap4\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":5334:5343  value > 0 */\n      dup4\n      iszero\n        /* \"v2-core-master/contracts/FeeTo.sol\":5330:5551  if (value > 0) {\r... */\n      tag_66\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":5514:5526  feeRecipient */\n      sload(0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5534  IUniswapV2Pair(pair).transfer(feeRecipient, value) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":5514:5526  feeRecipient */\n      swap3\n      dup4\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5534  IUniswapV2Pair(pair).transfer(feeRecipient, value) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup8\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5513  IUniswapV2Pair(pair).transfer */\n      swap2\n      dup8\n      and\n      swap2\n      0xa9059cbb\n      swap2\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5534  IUniswapV2Pair(pair).transfer(feeRecipient, value) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"v2-core-master/contracts/FeeTo.sol\":5514:5526  feeRecipient */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5513  IUniswapV2Pair(pair).transfer */\n      dup8\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5534  IUniswapV2Pair(pair).transfer(feeRecipient, value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_63:\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5534  IUniswapV2Pair(pair).transfer(feeRecipient, value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_64:\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5534  IUniswapV2Pair(pair).transfer(feeRecipient, value) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":5484:5534  IUniswapV2Pair(pair).transfer(feeRecipient, value) */\n      mload\n        /* \"v2-core-master/contracts/FeeTo.sol\":5477:5535  assert(IUniswapV2Pair(pair).transfer(feeRecipient, value)) */\n      tag_66\n      jumpi\n      invalid\n    tag_66:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4219:5569  function claim(address pair) public returns (uint value) {\r... */\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":2283:4211  function renounce(address pair) public returns (uint value) {\r... */\n    tag_22:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2331:2341  uint value */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":2354:2391  PairAllowState storage pairAllowState */\n      dup1\n        /* \"v2-core-master/contracts/FeeTo.sol\":2394:2409  pairAllowStates */\n      0x03\n        /* \"v2-core-master/contracts/FeeTo.sol\":2394:2415  pairAllowStates[pair] */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":2410:2414  pair */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":2394:2415  pairAllowStates[pair] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"v2-core-master/contracts/FeeTo.sol\":2354:2415  PairAllowState storage pairAllowState = pairAllowStates[pair] */\n      swap1\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":2426:2466  TokenAllowState storage token0AllowState */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":2469:2485  tokenAllowStates */\n      0x02\n        /* \"v2-core-master/contracts/FeeTo.sol\":2469:2516  tokenAllowStates[IUniswapV2Pair(pair).token0()] */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":2501:2505  pair */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":2486:2513  IUniswapV2Pair(pair).token0 */\n      and\n      0x0dfe1681\n        /* \"v2-core-master/contracts/FeeTo.sol\":2486:2515  IUniswapV2Pair(pair).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2486:2515  IUniswapV2Pair(pair).token0() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_69:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2486:2515  IUniswapV2Pair(pair).token0() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_70:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2486:2515  IUniswapV2Pair(pair).token0() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":2469:2516  tokenAllowStates[IUniswapV2Pair(pair).token0()] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"v2-core-master/contracts/FeeTo.sol\":2426:2516  TokenAllowState storage token0AllowState = tokenAllowStates[IUniswapV2Pair(pair).token0()] */\n      swap1\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":2527:2567  TokenAllowState storage token1AllowState */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":2570:2586  tokenAllowStates */\n      0x02\n        /* \"v2-core-master/contracts/FeeTo.sol\":2570:2617  tokenAllowStates[IUniswapV2Pair(pair).token1()] */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":2602:2606  pair */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":2587:2614  IUniswapV2Pair(pair).token1 */\n      and\n      0xd21220a7\n        /* \"v2-core-master/contracts/FeeTo.sol\":2587:2616  IUniswapV2Pair(pair).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_71:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2587:2616  IUniswapV2Pair(pair).token1() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2587:2616  IUniswapV2Pair(pair).token1() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_73:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":2587:2616  IUniswapV2Pair(pair).token1() */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":2570:2617  tokenAllowStates[IUniswapV2Pair(pair).token1()] */\n      and\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":2587:2616  IUniswapV2Pair(pair).token1() */\n      0x20\n        /* \"v2-core-master/contracts/FeeTo.sol\":2570:2617  tokenAllowStates[IUniswapV2Pair(pair).token1()] */\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3025  token0AllowState.allowed */\n      dup3\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":2570:2617  tokenAllowStates[IUniswapV2Pair(pair).token1()] */\n      swap1\n      swap2\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3025  token0AllowState.allowed */\n      0xff\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3034  token0AllowState.allowed == false */\n      iszero\n      dup1\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3084  token0AllowState.allowed == false ||\r... */\n      tag_74\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":3051:3075  token1AllowState.allowed */\n      dup1\n      sload\n      0xff\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":3051:3084  token1AllowState.allowed == false */\n      iszero\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3084  token0AllowState.allowed == false ||\r... */\n    tag_74:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3168  token0AllowState.allowed == false ||\r... */\n      dup1\n      tag_75\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":3134:3168  pairAllowState.token0DisallowCount */\n      dup3\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":3101:3131  token0AllowState.disallowCount */\n      dup3\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":3134:3168  pairAllowState.token0DisallowCount */\n      swap2\n      dup3\n      and\n      0x0100\n        /* \"v2-core-master/contracts/FeeTo.sol\":3101:3131  token0AllowState.disallowCount */\n      swap1\n      swap2\n      div\n      swap1\n      swap2\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":3101:3168  token0AllowState.disallowCount > pairAllowState.token0DisallowCount */\n      gt\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3168  token0AllowState.allowed == false ||\r... */\n    tag_75:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3252  token0AllowState.allowed == false ||\r... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":3218:3252  pairAllowState.token1DisallowCount */\n      dup3\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":3185:3215  token1AllowState.disallowCount */\n      dup2\n      sload\n      shl(0x80, 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":3218:3252  pairAllowState.token1DisallowCount */\n      swap1\n      swap2\n      div\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      0x0100\n        /* \"v2-core-master/contracts/FeeTo.sol\":3185:3215  token1AllowState.disallowCount */\n      swap1\n      swap3\n      div\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":3185:3252  token1AllowState.disallowCount > pairAllowState.token1DisallowCount */\n      gt\n        /* \"v2-core-master/contracts/FeeTo.sol\":3001:3252  token0AllowState.allowed == false ||\r... */\n    tag_76:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2983:4204  if (\r... */\n      iszero\n      tag_66\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3332  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":3326:3330  this */\n      address\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3332  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3317  IUniswapV2Pair(pair).balanceOf */\n      dup8\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3332  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3317  IUniswapV2Pair(pair).balanceOf */\n      dup7\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3332  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_78:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3332  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_79:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3332  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_80:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":3287:3332  IUniswapV2Pair(pair).balanceOf(address(this)) */\n      mload\n      swap4\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":3351:3360  value > 0 */\n      dup4\n      iszero\n        /* \"v2-core-master/contracts/FeeTo.sol\":3347:3693  if (value > 0) {\r... */\n      tag_81\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3626  IUniswapV2Pair(pair).transfer(pair, value) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3613  IUniswapV2Pair(pair).transfer */\n      dup8\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3626  IUniswapV2Pair(pair).transfer(pair, value) */\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3613  IUniswapV2Pair(pair).transfer */\n      0xa9059cbb\n      swap2\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3626  IUniswapV2Pair(pair).transfer(pair, value) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3613  IUniswapV2Pair(pair).transfer */\n      dup8\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3626  IUniswapV2Pair(pair).transfer(pair, value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_82:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3626  IUniswapV2Pair(pair).transfer(pair, value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_83:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3626  IUniswapV2Pair(pair).transfer(pair, value) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":3584:3626  IUniswapV2Pair(pair).transfer(pair, value) */\n      mload\n        /* \"v2-core-master/contracts/FeeTo.sol\":3577:3627  assert(IUniswapV2Pair(pair).transfer(pair, value)) */\n      tag_85\n      jumpi\n      invalid\n    tag_85:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3677  IUniswapV2Pair(pair).burn(pair) */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x226bf2d1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3671  IUniswapV2Pair(pair).burn */\n      dup8\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3677  IUniswapV2Pair(pair).burn(pair) */\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3671  IUniswapV2Pair(pair).burn */\n      swap1\n      swap3\n      0x89afcb44\n      swap3\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3677  IUniswapV2Pair(pair).burn(pair) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3671  IUniswapV2Pair(pair).burn */\n      dup8\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3677  IUniswapV2Pair(pair).burn(pair) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_86:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3677  IUniswapV2Pair(pair).burn(pair) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_87:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3646:3677  IUniswapV2Pair(pair).burn(pair) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_88:\n      pop\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":3347:3693  if (value > 0) {\r... */\n    tag_81:\n        /* \"v2-core-master/contracts/FeeTo.sol\":3816:3840  token0AllowState.allowed */\n      dup2\n      sload\n      0xff\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":3812:3944  if (token0AllowState.allowed) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":3898:3928  token0AllowState.disallowCount */\n      dup2\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":3861:3928  pairAllowState.token0DisallowCount = token0AllowState.disallowCount */\n      dup4\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":3898:3928  token0AllowState.disallowCount */\n      0x0100\n      swap1\n      swap2\n      div\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      not(0xffffffffffffffffffffffffffffffff)\n        /* \"v2-core-master/contracts/FeeTo.sol\":3861:3928  pairAllowState.token0DisallowCount = token0AllowState.disallowCount */\n      swap1\n      swap2\n      and\n      or\n      dup4\n      sstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":3812:3944  if (token0AllowState.allowed) {\r... */\n    tag_89:\n        /* \"v2-core-master/contracts/FeeTo.sol\":4065:4089  token1AllowState.allowed */\n      dup1\n      sload\n      0xff\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":4061:4193  if (token1AllowState.allowed) {\r... */\n      iszero\n      tag_66\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":4147:4177  token1AllowState.disallowCount */\n      sload\n        /* \"v2-core-master/contracts/FeeTo.sol\":4110:4177  pairAllowState.token1DisallowCount = token1AllowState.disallowCount */\n      dup3\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":4147:4177  token1AllowState.disallowCount */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n      shl(0x80, 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":4110:4177  pairAllowState.token1DisallowCount = token1AllowState.disallowCount */\n      mul\n      or\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":2283:4211  function renounce(address pair) public returns (uint value) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":499:558  mapping(address => TokenAllowState) public tokenAllowStates */\n    tag_25:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      dup2\n      and\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup3\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":368:395  address public feeRecipient */\n    tag_27:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":2074:2275  function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r... */\n    tag_33:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2168:2174  uint i */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":2163:2268  for (uint i; i < tokens.length; i++) {\r... */\n    tag_92:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2180:2186  tokens */\n      dup3\n        /* \"v2-core-master/contracts/FeeTo.sol\":2180:2193  tokens.length */\n      mload\n        /* \"v2-core-master/contracts/FeeTo.sol\":2176:2177  i */\n      dup2\n        /* \"v2-core-master/contracts/FeeTo.sol\":2176:2193  i < tokens.length */\n      lt\n        /* \"v2-core-master/contracts/FeeTo.sol\":2163:2268  for (uint i; i < tokens.length; i++) {\r... */\n      iszero\n      tag_93\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":2215:2256  updateTokenAllowState(tokens[i], allowed) */\n      tag_95\n        /* \"v2-core-master/contracts/FeeTo.sol\":2237:2243  tokens */\n      dup4\n        /* \"v2-core-master/contracts/FeeTo.sol\":2244:2245  i */\n      dup3\n        /* \"v2-core-master/contracts/FeeTo.sol\":2237:2246  tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      invalid\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"v2-core-master/contracts/FeeTo.sol\":2248:2255  allowed */\n      dup4\n        /* \"v2-core-master/contracts/FeeTo.sol\":2215:2236  updateTokenAllowState */\n      tag_38\n        /* \"v2-core-master/contracts/FeeTo.sol\":2215:2256  updateTokenAllowState(tokens[i], allowed) */\n      jump\t// in\n    tag_95:\n        /* \"v2-core-master/contracts/FeeTo.sol\":2195:2198  i++ */\n      0x01\n      add\n        /* \"v2-core-master/contracts/FeeTo.sol\":2163:2268  for (uint i; i < tokens.length; i++) {\r... */\n      jump(tag_92)\n    tag_93:\n      pop\n        /* \"v2-core-master/contracts/FeeTo.sol\":2074:2275  function updateTokenAllowStates(address[] memory tokens, bool allowed) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":341:361  address public owner */\n    tag_35:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":1162:2066  function updateTokenAllowState(address token, bool allowed) public {\r... */\n    tag_38:\n        /* \"v2-core-master/contracts/FeeTo.sol\":1262:1267  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"v2-core-master/contracts/FeeTo.sol\":1248:1258  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/FeeTo.sol\":1248:1267  msg.sender == owner */\n      eq\n        /* \"v2-core-master/contracts/FeeTo.sol\":1240:1313  require(msg.sender == owner, 'FeeTo::updateTokenAllowState: not allowed') */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b4bed03e1ae11dc2c3fb104a5833337d688ebaf962183caa90f79f56b534444f\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/FeeTo.sol\":1366:1389  tokenAllowStates[token] */\n      dup3\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":1324:1363  TokenAllowState storage tokenAllowState */\n      0x00\n        /* \"v2-core-master/contracts/FeeTo.sol\":1366:1389  tokenAllowStates[token] */\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":1366:1382  tokenAllowStates */\n      0x02\n        /* \"v2-core-master/contracts/FeeTo.sol\":1366:1389  tokenAllowStates[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"v2-core-master/contracts/FeeTo.sol\":1479:1502  tokenAllowState.allowed */\n      dup1\n      sload\n      0xff\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":1468:1502  allowed != tokenAllowState.allowed */\n      iszero\n      iszero\n      dup3\n      iszero\n      iszero\n      eq\n        /* \"v2-core-master/contracts/FeeTo.sol\":1464:2059  if (allowed != tokenAllowState.allowed) {\r... */\n      tag_93\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":1519:1552  tokenAllowState.allowed = allowed */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      or\n      dup1\n      dup3\n      sstore\n      0x0100\n        /* \"v2-core-master/contracts/FeeTo.sol\":1847:1876  tokenAllowState.disallowCount */\n      swap1\n      div\n      sub(shl(0x80, 0x01), 0x01)\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":1843:2048  if (tokenAllowState.disallowCount == 0) {\r... */\n      tag_100\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":1902:1935  tokenAllowState.disallowCount = 1 */\n      dup1\n      sload\n      not(sub(shl(0x88, 0x01), 0x0100))\n      and\n      0x0100\n      or\n      dup2\n      sstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":1843:2048  if (tokenAllowState.disallowCount == 0) {\r... */\n      jump(tag_93)\n    tag_100:\n        /* \"v2-core-master/contracts/FeeTo.sol\":1961:1977  allowed == false */\n      dup2\n        /* \"v2-core-master/contracts/FeeTo.sol\":1957:2048  if (allowed == false) {\r... */\n      tag_93\n      jumpi\n        /* \"v2-core-master/contracts/FeeTo.sol\":1998:2032  tokenAllowState.disallowCount += 1 */\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      0x0100\n      dup1\n      dup4\n      div\n      dup3\n      and\n        /* \"v2-core-master/contracts/FeeTo.sol\":2031:2032  1 */\n      0x01\n        /* \"v2-core-master/contracts/FeeTo.sol\":1998:2032  tokenAllowState.disallowCount += 1 */\n      add\n      swap1\n      swap2\n      and\n      mul\n      not(sub(shl(0x88, 0x01), 0x0100))\n      swap1\n      swap2\n      and\n      or\n      dup2\n      sstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":1162:2066  function updateTokenAllowState(address token, bool allowed) public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":679:736  mapping(address => PairAllowState) public pairAllowStates */\n    tag_41:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x80, 0x01)\n      swap1\n      div\n      and\n      dup3\n      jump\t// out\n        /* \"v2-core-master/contracts/FeeTo.sol\":974:1154  function setFeeRecipient(address feeRecipient_) public {\r... */\n    tag_44:\n        /* \"v2-core-master/contracts/FeeTo.sol\":1062:1067  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"v2-core-master/contracts/FeeTo.sol\":1048:1058  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/FeeTo.sol\":1048:1067  msg.sender == owner */\n      eq\n        /* \"v2-core-master/contracts/FeeTo.sol\":1040:1107  require(msg.sender == owner, 'FeeTo::setFeeRecipient: not allowed') */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_763ff1f102bada5aa52b1cec87d5b4c73ddce91823ce8eeea8fef7747bdd3226\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"v2-core-master/contracts/FeeTo.sol\":1118:1130  feeRecipient */\n      0x01\n        /* \"v2-core-master/contracts/FeeTo.sol\":1118:1146  feeRecipient = feeRecipient_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"v2-core-master/contracts/FeeTo.sol\":974:1154  function setFeeRecipient(address feeRecipient_) public {\r... */\n      jump\t// out\n    stop\n    data_763ff1f102bada5aa52b1cec87d5b4c73ddce91823ce8eeea8fef7747bdd3226 466565546f3a3a736574466565526563697069656e743a206e6f7420616c6c6f776564\n    data_b4bed03e1ae11dc2c3fb104a5833337d688ebaf962183caa90f79f56b534444f 466565546f3a3a757064617465546f6b656e416c6c6f7753746174653a206e6f7420616c6c6f776564\n\n    auxdata: 0xa265627a7a7231582087d534ab3fc46f633794d26597f977532f17b5b47343d4151087f2aa15e2c6ef64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610c76380380610c768339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610c11806100656000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638d976172116100665780638d976172146101965780638da5cb5b1461023b578063df8ca76a14610243578063e359f0ed14610271578063e74b981b146102bd5761009e565b806313af4035146100a35780631e83409a146100cb5780631f76a7af146101035780633e2f3f2b146101295780634690484014610172575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b03166102e3565b005b6100f1600480360360208110156100e157600080fd5b50356001600160a01b0316610364565b60408051918252519081900360200190f35b6100f16004803603602081101561011957600080fd5b50356001600160a01b031661062d565b61014f6004803603602081101561013f57600080fd5b50356001600160a01b03166109ac565b6040805192151583526001600160801b0390911660208301528051918290030190f35b61017a6109d1565b604080516001600160a01b039092168252519081900360200190f35b6100c9600480360360408110156101ac57600080fd5b8101906020810181356401000000008111156101c757600080fd5b8201836020820111156101d957600080fd5b803590602001918460208302840111640100000000831117156101fb57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050505035151590506109e0565b61017a610a16565b6100c96004803603604081101561025957600080fd5b506001600160a01b0381351690602001351515610a25565b6102976004803603602081101561028757600080fd5b50356001600160a01b0316610aff565b604080516001600160801b03938416815291909216602082015281519081900390910190f35b6100c9600480360360208110156102d357600080fd5b50356001600160a01b0316610b25565b6000546001600160a01b03163314610342576040805162461bcd60e51b815260206004820152601c60248201527f466565546f3a3a7365744f776e65723a206e6f7420616c6c6f77656400000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060036000846001600160a01b03166001600160a01b031681526020019081526020016000209050600060026000856001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d60208110156103f757600080fd5b81019080805190602001909291905050506001600160a01b03166001600160a01b031681526020019081526020016000209050600060026000866001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561046957600080fd5b505afa15801561047d573d6000803e3d6000fd5b505050506040513d602081101561049357600080fd5b50516001600160a01b031681526020810191909152604001600020825490915060ff1680156104c35750805460ff165b80156104e257508254825461010090046001600160801b039081169116145b801561050857508254815461010090046001600160801b03908116600160801b90920416145b801561051e57506001546001600160a01b031615155b1561062557604080516370a0823160e01b815230600482015290516001600160a01b038716916370a08231916024808301926020929190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505193508315610625576001546040805163a9059cbb60e01b81526001600160a01b0392831660048201526024810187905290519187169163a9059cbb916044808201926020929091908290030181600087803b1580156105f357600080fd5b505af1158015610607573d6000803e3d6000fd5b505050506040513d602081101561061d57600080fd5b505161062557fe5b505050919050565b60008060036000846001600160a01b03166001600160a01b031681526020019081526020016000209050600060026000856001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561069657600080fd5b505afa1580156106aa573d6000803e3d6000fd5b505050506040513d60208110156106c057600080fd5b81019080805190602001909291905050506001600160a01b03166001600160a01b031681526020019081526020016000209050600060026000866001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561073257600080fd5b505afa158015610746573d6000803e3d6000fd5b505050506040513d602081101561075c57600080fd5b50516001600160a01b031681526020810191909152604001600020825490915060ff16158061078d5750805460ff16155b806107ad5750825482546001600160801b03918216610100909104909116115b806107d3575082548154600160801b9091046001600160801b0390811661010090920416115b1561062557604080516370a0823160e01b815230600482015290516001600160a01b038716916370a08231916024808301926020929190829003018186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d602081101561084857600080fd5b505193508315610947576040805163a9059cbb60e01b81526001600160a01b0387166004820181905260248201879052915163a9059cbb916044808201926020929091908290030181600087803b1580156108a257600080fd5b505af11580156108b6573d6000803e3d6000fd5b505050506040513d60208110156108cc57600080fd5b50516108d457fe5b6040805163226bf2d160e21b81526001600160a01b03871660048201819052825190926389afcb4492602480820193918290030181600087803b15801561091a57600080fd5b505af115801561092e573d6000803e3d6000fd5b505050506040513d604081101561094457600080fd5b50505b815460ff161561097d57815483546101009091046001600160801b03166fffffffffffffffffffffffffffffffff199091161783555b805460ff1615610625575482546001600160801b0390811661010090920416600160801b021790915550919050565b60026020526000908152604090205460ff81169061010090046001600160801b031682565b6001546001600160a01b031681565b60005b8251811015610a1157610a098382815181106109fb57fe5b602002602001015183610a25565b6001016109e3565b505050565b6000546001600160a01b031681565b6000546001600160a01b03163314610a6e5760405162461bcd60e51b8152600401808060200182810382526029815260200180610bb46029913960400191505060405180910390fd5b6001600160a01b0382166000908152600260205260409020805460ff16151582151514610a1157805460ff19168215151780825561010090046001600160801b0316610acc578054610100600160881b031916610100178155610a11565b81610a115780546001600160801b03610100808304821660010190911602610100600160881b0319909116178155505050565b6003602052600090815260409020546001600160801b0380821691600160801b90041682565b6000546001600160a01b03163314610b6e5760405162461bcd60e51b8152600401808060200182810382526023815260200180610b916023913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b039290921691909117905556fe466565546f3a3a736574466565526563697069656e743a206e6f7420616c6c6f776564466565546f3a3a757064617465546f6b656e416c6c6f7753746174653a206e6f7420616c6c6f776564a265627a7a7231582087d534ab3fc46f633794d26597f977532f17b5b47343d4151087f2aa15e2c6ef64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC76 CODESIZE SUB DUP1 PUSH2 0xC76 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xC11 DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D976172 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8D976172 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xDF8CA76A EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xE359F0ED EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x2BD JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x1F76A7AF EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x3E2F3F2B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x172 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62D JUMP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP POP CALLDATALOAD ISZERO ISZERO SWAP1 POP PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x17A PUSH2 0xA16 JUMP JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xA25 JUMP JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x342 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565546F3A3A7365744F776E65723A206E6F7420616C6C6F77656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x4C3 JUMPI POP DUP1 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x4E2 JUMPI POP DUP3 SLOAD DUP3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x508 JUMPI POP DUP3 SLOAD DUP2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x51E JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP DUP4 ISZERO PUSH2 0x625 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP8 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x625 JUMPI INVALID JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x78D JUMPI POP DUP1 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x7AD JUMPI POP DUP3 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND GT JUMPDEST DUP1 PUSH2 0x7D3 JUMPI POP DUP3 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND GT JUMPDEST ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x832 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP DUP4 ISZERO PUSH2 0x947 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x8D4 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x226BF2D1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD SWAP1 SWAP3 PUSH4 0x89AFCB44 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x97D JUMPI DUP2 SLOAD DUP4 SLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR DUP4 SSTORE JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x625 JUMPI SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND PUSH1 0x1 PUSH1 0x80 SHL MUL OR SWAP1 SWAP2 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA11 JUMPI PUSH2 0xA09 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBB4 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0xA11 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR DUP1 DUP3 SSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0xACC JUMPI DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0x88 SHL SUB NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH2 0xA11 JUMP JUMPDEST DUP2 PUSH2 0xA11 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x100 DUP1 DUP4 DIV DUP3 AND PUSH1 0x1 ADD SWAP1 SWAP2 AND MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0x88 SHL SUB NOT SWAP1 SWAP2 AND OR DUP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB91 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID CHAINID PUSH6 0x65546F3A3A73 PUSH6 0x744665655265 PUSH4 0x69706965 PUSH15 0x743A206E6F7420616C6C6F77656446 PUSH6 0x65546F3A3A75 PUSH17 0x64617465546F6B656E416C6C6F77537461 PUSH21 0x653A206E6F7420616C6C6F776564A265627A7A7231 PC KECCAK256 DUP8 0xD5 CALLVALUE 0xAB EXTCODEHASH 0xC4 PUSH16 0x633794D26597F977532F17B5B47343D4 ISZERO LT DUP8 CALLCODE 0xAA ISZERO 0xE2 0xC6 0xEF PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "319:5253:0:-;;;745:68;8:9:-1;5:2;;;30:1;27;20:12;5:2;745:68:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;745:68:0;791:5;:14;;-1:-1:-1;;;;;791:14:0;;;-1:-1:-1;;;;;;791:14:0;;;;;;;;;319:5253;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80638d976172116100665780638d976172146101965780638da5cb5b1461023b578063df8ca76a14610243578063e359f0ed14610271578063e74b981b146102bd5761009e565b806313af4035146100a35780631e83409a146100cb5780631f76a7af146101035780633e2f3f2b146101295780634690484014610172575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b03166102e3565b005b6100f1600480360360208110156100e157600080fd5b50356001600160a01b0316610364565b60408051918252519081900360200190f35b6100f16004803603602081101561011957600080fd5b50356001600160a01b031661062d565b61014f6004803603602081101561013f57600080fd5b50356001600160a01b03166109ac565b6040805192151583526001600160801b0390911660208301528051918290030190f35b61017a6109d1565b604080516001600160a01b039092168252519081900360200190f35b6100c9600480360360408110156101ac57600080fd5b8101906020810181356401000000008111156101c757600080fd5b8201836020820111156101d957600080fd5b803590602001918460208302840111640100000000831117156101fb57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050505035151590506109e0565b61017a610a16565b6100c96004803603604081101561025957600080fd5b506001600160a01b0381351690602001351515610a25565b6102976004803603602081101561028757600080fd5b50356001600160a01b0316610aff565b604080516001600160801b03938416815291909216602082015281519081900390910190f35b6100c9600480360360208110156102d357600080fd5b50356001600160a01b0316610b25565b6000546001600160a01b03163314610342576040805162461bcd60e51b815260206004820152601c60248201527f466565546f3a3a7365744f776e65723a206e6f7420616c6c6f77656400000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060036000846001600160a01b03166001600160a01b031681526020019081526020016000209050600060026000856001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d60208110156103f757600080fd5b81019080805190602001909291905050506001600160a01b03166001600160a01b031681526020019081526020016000209050600060026000866001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561046957600080fd5b505afa15801561047d573d6000803e3d6000fd5b505050506040513d602081101561049357600080fd5b50516001600160a01b031681526020810191909152604001600020825490915060ff1680156104c35750805460ff165b80156104e257508254825461010090046001600160801b039081169116145b801561050857508254815461010090046001600160801b03908116600160801b90920416145b801561051e57506001546001600160a01b031615155b1561062557604080516370a0823160e01b815230600482015290516001600160a01b038716916370a08231916024808301926020929190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505193508315610625576001546040805163a9059cbb60e01b81526001600160a01b0392831660048201526024810187905290519187169163a9059cbb916044808201926020929091908290030181600087803b1580156105f357600080fd5b505af1158015610607573d6000803e3d6000fd5b505050506040513d602081101561061d57600080fd5b505161062557fe5b505050919050565b60008060036000846001600160a01b03166001600160a01b031681526020019081526020016000209050600060026000856001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561069657600080fd5b505afa1580156106aa573d6000803e3d6000fd5b505050506040513d60208110156106c057600080fd5b81019080805190602001909291905050506001600160a01b03166001600160a01b031681526020019081526020016000209050600060026000866001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561073257600080fd5b505afa158015610746573d6000803e3d6000fd5b505050506040513d602081101561075c57600080fd5b50516001600160a01b031681526020810191909152604001600020825490915060ff16158061078d5750805460ff16155b806107ad5750825482546001600160801b03918216610100909104909116115b806107d3575082548154600160801b9091046001600160801b0390811661010090920416115b1561062557604080516370a0823160e01b815230600482015290516001600160a01b038716916370a08231916024808301926020929190829003018186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d602081101561084857600080fd5b505193508315610947576040805163a9059cbb60e01b81526001600160a01b0387166004820181905260248201879052915163a9059cbb916044808201926020929091908290030181600087803b1580156108a257600080fd5b505af11580156108b6573d6000803e3d6000fd5b505050506040513d60208110156108cc57600080fd5b50516108d457fe5b6040805163226bf2d160e21b81526001600160a01b03871660048201819052825190926389afcb4492602480820193918290030181600087803b15801561091a57600080fd5b505af115801561092e573d6000803e3d6000fd5b505050506040513d604081101561094457600080fd5b50505b815460ff161561097d57815483546101009091046001600160801b03166fffffffffffffffffffffffffffffffff199091161783555b805460ff1615610625575482546001600160801b0390811661010090920416600160801b021790915550919050565b60026020526000908152604090205460ff81169061010090046001600160801b031682565b6001546001600160a01b031681565b60005b8251811015610a1157610a098382815181106109fb57fe5b602002602001015183610a25565b6001016109e3565b505050565b6000546001600160a01b031681565b6000546001600160a01b03163314610a6e5760405162461bcd60e51b8152600401808060200182810382526029815260200180610bb46029913960400191505060405180910390fd5b6001600160a01b0382166000908152600260205260409020805460ff16151582151514610a1157805460ff19168215151780825561010090046001600160801b0316610acc578054610100600160881b031916610100178155610a11565b81610a115780546001600160801b03610100808304821660010190911602610100600160881b0319909116178155505050565b6003602052600090815260409020546001600160801b0380821691600160801b90041682565b6000546001600160a01b03163314610b6e5760405162461bcd60e51b8152600401808060200182810382526023815260200180610b916023913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b039290921691909117905556fe466565546f3a3a736574466565526563697069656e743a206e6f7420616c6c6f776564466565546f3a3a757064617465546f6b656e416c6c6f7753746174653a206e6f7420616c6c6f776564a265627a7a7231582087d534ab3fc46f633794d26597f977532f17b5b47343d4151087f2aa15e2c6ef64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D976172 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8D976172 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xDF8CA76A EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xE359F0ED EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x2BD JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x1F76A7AF EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x3E2F3F2B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x172 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62D JUMP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP POP CALLDATALOAD ISZERO ISZERO SWAP1 POP PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x17A PUSH2 0xA16 JUMP JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xA25 JUMP JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x342 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565546F3A3A7365744F776E65723A206E6F7420616C6C6F77656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x4C3 JUMPI POP DUP1 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x4E2 JUMPI POP DUP3 SLOAD DUP3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x508 JUMPI POP DUP3 SLOAD DUP2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x51E JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP DUP4 ISZERO PUSH2 0x625 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP8 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x625 JUMPI INVALID JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x78D JUMPI POP DUP1 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x7AD JUMPI POP DUP3 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND GT JUMPDEST DUP1 PUSH2 0x7D3 JUMPI POP DUP3 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND GT JUMPDEST ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x832 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP DUP4 ISZERO PUSH2 0x947 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x8D4 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x226BF2D1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD SWAP1 SWAP3 PUSH4 0x89AFCB44 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x97D JUMPI DUP2 SLOAD DUP4 SLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR DUP4 SSTORE JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x625 JUMPI SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND PUSH1 0x1 PUSH1 0x80 SHL MUL OR SWAP1 SWAP2 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA11 JUMPI PUSH2 0xA09 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBB4 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0xA11 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR DUP1 DUP3 SSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0xACC JUMPI DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0x88 SHL SUB NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH2 0xA11 JUMP JUMPDEST DUP2 PUSH2 0xA11 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x100 DUP1 DUP4 DIV DUP3 AND PUSH1 0x1 ADD SWAP1 SWAP2 AND MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0x88 SHL SUB NOT SWAP1 SWAP2 AND OR DUP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB91 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID CHAINID PUSH6 0x65546F3A3A73 PUSH6 0x744665655265 PUSH4 0x69706965 PUSH15 0x743A206E6F7420616C6C6F77656446 PUSH6 0x65546F3A3A75 PUSH17 0x64617465546F6B656E416C6C6F77537461 PUSH21 0x653A206E6F7420616C6C6F776564A265627A7A7231 PC KECCAK256 DUP8 0xD5 CALLVALUE 0xAB EXTCODEHASH 0xC4 PUSH16 0x633794D26597F977532F17B5B47343D4 ISZERO LT DUP8 CALLCODE 0xAA ISZERO 0xE2 0xC6 0xEF PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "319:5253:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:5253:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;821:145:0;-1:-1:-1;;;;;821:145:0;;:::i;:::-;;4219:1350;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4219:1350:0;-1:-1:-1;;;;;4219:1350:0;;:::i;:::-;;;;;;;;;;;;;;;;2283:1928;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2283:1928:0;-1:-1:-1;;;;;2283:1928:0;;:::i;499:59::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;499:59:0;-1:-1:-1;;;;;499:59:0;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;499:59:0;;;;;;;;;;;;;;;;368:27;;;:::i;:::-;;;;-1:-1:-1;;;;;368:27:0;;;;;;;;;;;;;;2074:201;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2074:201:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2074:201:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2074:201:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2074:201:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2074:201:0;;-1:-1:-1;;;;2074:201:0;;;;-1:-1:-1;2074:201:0;:::i;341:20::-;;;:::i;1162:904::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1162:904:0;;;;;;;;;;:::i;679:57::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;679:57:0;-1:-1:-1;;;;;679:57:0;;:::i;:::-;;;;-1:-1:-1;;;;;679:57:0;;;;;;;;;;;;;;;;;;;;;;;;974:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;974:180:0;-1:-1:-1;;;;;974:180:0;;:::i;821:145::-;895:5;;-1:-1:-1;;;;;895:5:0;881:10;:19;873:60;;;;;-1:-1:-1;;;873:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:5;:14;;-1:-1:-1;;;;;;944:14:0;-1:-1:-1;;;;;944:14:0;;;;;;;;;;821:145::o;4219:1350::-;4264:10;4287:37;4327:15;:21;4343:4;-1:-1:-1;;;;;4327:21:0;-1:-1:-1;;;;;4327:21:0;;;;;;;;;;;;4287:61;;4359:40;4402:16;:47;4434:4;-1:-1:-1;;;;;4419:27:0;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4419:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4419:29:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4419:29:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4402:47:0;-1:-1:-1;;;;;4402:47:0;;;;;;;;;;;;4359:90;;4460:40;4503:16;:47;4535:4;-1:-1:-1;;;;;4520:27:0;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4520:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4520:29:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4520:29:0;-1:-1:-1;;;;;4503:47:0;;;4520:29;4503:47;;;;;;;;-1:-1:-1;4503:47:0;4957:24;;4503:47;;-1:-1:-1;4957:24:0;;:65;;;;-1:-1:-1;4998:24:0;;;;4957:65;:150;;;;-1:-1:-1;5073:34:0;;5039:30;;5073:34;5039:30;;-1:-1:-1;;;;;5039:30:0;;;5073:34;;5039:68;4957:150;:235;;;;-1:-1:-1;5158:34:0;;5124:30;;5158:34;5124:30;;-1:-1:-1;;;;;5124:30:0;;;-1:-1:-1;;;5158:34:0;;;;5124:68;4957:235;:278;;;;-1:-1:-1;5209:12:0;;-1:-1:-1;;;;;5209:12:0;:26;;4957:278;4939:623;;;5270:45;;;-1:-1:-1;;;5270:45:0;;5309:4;5270:45;;;;;;-1:-1:-1;;;;;5270:30:0;;;;;:45;;;;;;;;;;;;;;:30;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;5270:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5270:45:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5270:45:0;;-1:-1:-1;5334:9:0;;5330:221;;5514:12;;5484:50;;;-1:-1:-1;;;5484:50:0;;-1:-1:-1;;;;;5514:12:0;;;5484:50;;;;;;;;;;;;:29;;;;;;:50;;;;;;;;;;;;;;;5514:12;5484:29;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;5484:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5484:50:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5484:50:0;5477:58;;;;4219:1350;;;;;;:::o;2283:1928::-;2331:10;2354:37;2394:15;:21;2410:4;-1:-1:-1;;;;;2394:21:0;-1:-1:-1;;;;;2394:21:0;;;;;;;;;;;;2354:61;;2426:40;2469:16;:47;2501:4;-1:-1:-1;;;;;2486:27:0;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2486:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2486:29:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2486:29:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2469:47:0;-1:-1:-1;;;;;2469:47:0;;;;;;;;;;;;2426:90;;2527:40;2570:16;:47;2602:4;-1:-1:-1;;;;;2587:27:0;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2587:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2587:29:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2587:29:0;-1:-1:-1;;;;;2570:47:0;;;2587:29;2570:47;;;;;;;;-1:-1:-1;2570:47:0;3001:24;;2570:47;;-1:-1:-1;3001:24:0;;:33;;:83;;-1:-1:-1;3051:24:0;;;;:33;3001:83;:167;;;-1:-1:-1;3134:34:0;;3101:30;;-1:-1:-1;;;;;3134:34:0;;;;3101:30;;;;;;:67;3001:167;:251;;;-1:-1:-1;3218:34:0;;3185:30;;-1:-1:-1;;;3218:34:0;;;-1:-1:-1;;;;;3218:34:0;;;;3185:30;;;;:67;3001:251;2983:1221;;;3287:45;;;-1:-1:-1;;;3287:45:0;;3326:4;3287:45;;;;;;-1:-1:-1;;;;;3287:30:0;;;;;:45;;;;;;;;;;;;;;:30;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;3287:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3287:45:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3287:45:0;;-1:-1:-1;3351:9:0;;3347:346;;3584:42;;;-1:-1:-1;;;3584:42:0;;-1:-1:-1;;;;;3584:29:0;;:42;;;;;;;;;;;;;;:29;;:42;;;;;;;;;;;;;;;-1:-1:-1;3584:29:0;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;3584:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3584:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3584:42:0;3577:50;;;;3646:31;;;-1:-1:-1;;;3646:31:0;;-1:-1:-1;;;;;3646:25:0;;:31;;;;;;;;:25;;;;:31;;;;;;;;;;;-1:-1:-1;3646:25:0;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;3646:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3646:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3347:346:0;3816:24;;;;3812:132;;;3898:30;;3861:67;;3898:30;;;;-1:-1:-1;;;;;3898:30:0;-1:-1:-1;;3861:67:0;;;;;;3812:132;4065:24;;;;4061:132;;;4147:30;4110:67;;-1:-1:-1;;;;;4110:67:0;;;4147:30;;;;;-1:-1:-1;;;4110:67:0;;;;;-1:-1:-1;2283:1928:0;;-1:-1:-1;2283:1928:0:o;499:59::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;499:59:0;;:::o;368:27::-;;;-1:-1:-1;;;;;368:27:0;;:::o;2074:201::-;2168:6;2163:105;2180:6;:13;2176:1;:17;2163:105;;;2215:41;2237:6;2244:1;2237:9;;;;;;;;;;;;;;2248:7;2215:21;:41::i;:::-;2195:3;;2163:105;;;;2074:201;;:::o;341:20::-;;;-1:-1:-1;;;;;341:20:0;;:::o;1162:904::-;1262:5;;-1:-1:-1;;;;;1262:5:0;1248:10;:19;1240:73;;;;-1:-1:-1;;;1240:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1366:23:0;;1324:39;1366:23;;;:16;:23;;;;;1479;;;;1468:34;;;;;;1464:595;;1519:33;;-1:-1:-1;;1519:33:0;;;;;;;;;1847:29;;-1:-1:-1;;;;;1847:29:0;1843:205;;1902:33;;-1:-1:-1;;;;;;1902:33:0;;;;;1843:205;;;1961:16;1957:91;;1998:34;;-1:-1:-1;;;;;1998:34:0;;;;;;2031:1;1998:34;;;;;-1:-1:-1;;;;;;1998:34:0;;;;;;1162:904;;;:::o;679:57::-;;;;;;;;;;;;-1:-1:-1;;;;;679:57:0;;;;-1:-1:-1;;;679:57:0;;;;:::o;974:180::-;1062:5;;-1:-1:-1;;;;;1062:5:0;1048:10;:19;1040:67;;;;-1:-1:-1;;;1040:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:12;:28;;-1:-1:-1;;;;;;1118:28:0;-1:-1:-1;;;;;1118:28:0;;;;;;;;;;974:180::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "617800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claim(address)": "infinite",
								"feeRecipient()": "1126",
								"owner()": "1059",
								"pairAllowStates(address)": "1291",
								"renounce(address)": "infinite",
								"setFeeRecipient(address)": "infinite",
								"setOwner(address)": "21914",
								"tokenAllowStates(address)": "1277",
								"updateTokenAllowState(address,bool)": "infinite",
								"updateTokenAllowStates(address[],bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 319,
									"end": 5572,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "MSTORE"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "POP"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "MLOAD"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "PUSHSIZE"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "CODESIZE"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "SUB"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "DUP1"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "PUSHSIZE"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "DUP4"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "CODECOPY"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "DUP2"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "DUP2"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "ADD"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 745,
									"end": 813,
									"name": "MLOAD"
								},
								{
									"begin": 791,
									"end": 796,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "DUP1"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SWAP1"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SWAP3"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SWAP1"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SWAP3"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "AND"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SWAP2"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SWAP1"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SWAP2"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "OR"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SWAP1"
								},
								{
									"begin": 791,
									"end": 805,
									"name": "SSTORE"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "DUP1"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "CODECOPY"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 319,
									"end": 5572,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582087d534ab3fc46f633794d26597f977532f17b5b47343d4151087f2aa15e2c6ef64736f6c63430005100032",
									".code": [
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "MSTORE"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "POP"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "LT"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "SHR"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "8D976172"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "GT"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "8D976172"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "DF8CA76A"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "E359F0ED"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "E74B981B"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMP"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPDEST"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "1E83409A"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "1F76A7AF"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "3E2F3F2B"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "46904840"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "EQ"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPI"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "JUMPDEST"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "DUP1"
										},
										{
											"begin": 319,
											"end": 5572,
											"name": "REVERT"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "AND"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "STOP"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "JUMPDEST"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "DUP1"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "AND"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "JUMPDEST"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "DUP1"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "MLOAD"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "SWAP2"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "DUP3"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "MSTORE"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "MLOAD"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "SWAP1"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "DUP2"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "SWAP1"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "SUB"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "ADD"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "SWAP1"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "RETURN"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "JUMPDEST"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "DUP1"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "AND"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "AND"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "MLOAD"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP3"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP4"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP2"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "AND"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP4"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "ADD"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "MSTORE"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "MLOAD"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP2"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP3"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SUB"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "ADD"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "RETURN"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "SWAP3"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "AND"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "RETURN"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "JUMPDEST"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP2"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ADD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP2"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ADD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP2"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP3"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ADD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP2"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "MUL"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ADD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "MLOAD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP2"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ADD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "MSTORE"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP4"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP3"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP2"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP2"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP2"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "MSTORE"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ADD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP4"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "DUP4"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "SWAP3"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP1"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP3"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ISZERO"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "ISZERO"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "JUMPDEST"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "DUP2"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "ADD"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "ISZERO"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "ISZERO"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP4"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP5"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP2"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "MSTORE"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP2"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP3"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP3"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "ADD"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "MSTORE"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP2"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "MLOAD"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP2"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SUB"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP2"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "ADD"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "RETURN"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "AND"
										},
										{
											"begin": 881,
											"end": 891,
											"name": "CALLER"
										},
										{
											"begin": 881,
											"end": 900,
											"name": "EQ"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "JUMPI"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "DUP1"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "DUP3"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "DUP3"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH",
											"value": "466565546F3A3A7365744F776E65723A206E6F7420616C6C6F77656400000000"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "DUP3"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "MLOAD"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "SUB"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "REVERT"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 873,
											"end": 933,
											"name": "JUMPDEST"
										},
										{
											"begin": 944,
											"end": 949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "DUP1"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP3"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP3"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP2"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP2"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "OR"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SSTORE"
										},
										{
											"begin": 821,
											"end": 966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "JUMPDEST"
										},
										{
											"begin": 4264,
											"end": 4274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4324,
											"name": "DUP1"
										},
										{
											"begin": 4327,
											"end": 4342,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4347,
											"name": "DUP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "AND"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "DUP2"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "MSTORE"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "ADD"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "SWAP1"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "DUP2"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "MSTORE"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "ADD"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "KECCAK256"
										},
										{
											"begin": 4287,
											"end": 4348,
											"name": "SWAP1"
										},
										{
											"begin": 4287,
											"end": 4348,
											"name": "POP"
										},
										{
											"begin": 4359,
											"end": 4399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4438,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4419,
											"end": 4446,
											"name": "AND"
										},
										{
											"begin": 4419,
											"end": 4446,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "MLOAD"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP2"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "AND"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "SHL"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP2"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "MSTORE"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "ADD"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "MLOAD"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP1"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP4"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "SUB"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP2"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP7"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP1"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "POP"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "GAS"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "STATICCALL"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "POP"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "POP"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "POP"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "POP"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "MLOAD"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP2"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "ADD"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "SWAP1"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP1"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "DUP1"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "MLOAD"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "SWAP1"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "ADD"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "SWAP1"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "SWAP3"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "SWAP2"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "SWAP1"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "POP"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "POP"
										},
										{
											"begin": 4419,
											"end": 4448,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "AND"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "DUP2"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "MSTORE"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "DUP2"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "MSTORE"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "KECCAK256"
										},
										{
											"begin": 4359,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4359,
											"end": 4449,
											"name": "POP"
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4519,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4539,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "AND"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "MLOAD"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "DUP2"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "AND"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "SHL"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "DUP2"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "MSTORE"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "ADD"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "MLOAD"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "DUP1"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "DUP4"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "SUB"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "DUP2"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "DUP7"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "DUP1"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "POP"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "GAS"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "STATICCALL"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "POP"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "POP"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "POP"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "POP"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "MLOAD"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "MSTORE"
										},
										{
											"begin": 4520,
											"end": 4549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "SWAP2"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "SWAP2"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "KECCAK256"
										},
										{
											"begin": 4957,
											"end": 4981,
											"name": "DUP3"
										},
										{
											"begin": 4957,
											"end": 4981,
											"name": "SLOAD"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4550,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4957,
											"end": 4981,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4957,
											"end": 4981,
											"name": "AND"
										},
										{
											"begin": 4957,
											"end": 5022,
											"name": "DUP1"
										},
										{
											"begin": 4957,
											"end": 5022,
											"name": "ISZERO"
										},
										{
											"begin": 4957,
											"end": 5022,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4957,
											"end": 5022,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4998,
											"end": 5022,
											"name": "DUP1"
										},
										{
											"begin": 4998,
											"end": 5022,
											"name": "SLOAD"
										},
										{
											"begin": 4998,
											"end": 5022,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4998,
											"end": 5022,
											"name": "AND"
										},
										{
											"begin": 4957,
											"end": 5022,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 4957,
											"end": 5022,
											"name": "JUMPDEST"
										},
										{
											"begin": 4957,
											"end": 5107,
											"name": "DUP1"
										},
										{
											"begin": 4957,
											"end": 5107,
											"name": "ISZERO"
										},
										{
											"begin": 4957,
											"end": 5107,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 4957,
											"end": 5107,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5073,
											"end": 5107,
											"name": "DUP3"
										},
										{
											"begin": 5073,
											"end": 5107,
											"name": "SLOAD"
										},
										{
											"begin": 5039,
											"end": 5069,
											"name": "DUP3"
										},
										{
											"begin": 5039,
											"end": 5069,
											"name": "SLOAD"
										},
										{
											"begin": 5073,
											"end": 5107,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5039,
											"end": 5069,
											"name": "SWAP1"
										},
										{
											"begin": 5039,
											"end": 5069,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5039,
											"end": 5069,
											"name": "SWAP1"
										},
										{
											"begin": 5039,
											"end": 5069,
											"name": "DUP2"
										},
										{
											"begin": 5039,
											"end": 5069,
											"name": "AND"
										},
										{
											"begin": 5073,
											"end": 5107,
											"name": "SWAP2"
										},
										{
											"begin": 5073,
											"end": 5107,
											"name": "AND"
										},
										{
											"begin": 5039,
											"end": 5107,
											"name": "EQ"
										},
										{
											"begin": 4957,
											"end": 5107,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 4957,
											"end": 5107,
											"name": "JUMPDEST"
										},
										{
											"begin": 4957,
											"end": 5192,
											"name": "DUP1"
										},
										{
											"begin": 4957,
											"end": 5192,
											"name": "ISZERO"
										},
										{
											"begin": 4957,
											"end": 5192,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 4957,
											"end": 5192,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5158,
											"end": 5192,
											"name": "DUP3"
										},
										{
											"begin": 5158,
											"end": 5192,
											"name": "SLOAD"
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "DUP2"
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "SLOAD"
										},
										{
											"begin": 5158,
											"end": 5192,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "SWAP1"
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "SWAP1"
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "DUP2"
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5158,
											"end": 5192,
											"name": "SWAP1"
										},
										{
											"begin": 5158,
											"end": 5192,
											"name": "SWAP3"
										},
										{
											"begin": 5158,
											"end": 5192,
											"name": "DIV"
										},
										{
											"begin": 5158,
											"end": 5192,
											"name": "AND"
										},
										{
											"begin": 5124,
											"end": 5192,
											"name": "EQ"
										},
										{
											"begin": 4957,
											"end": 5192,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 4957,
											"end": 5192,
											"name": "JUMPDEST"
										},
										{
											"begin": 4957,
											"end": 5235,
											"name": "DUP1"
										},
										{
											"begin": 4957,
											"end": 5235,
											"name": "ISZERO"
										},
										{
											"begin": 4957,
											"end": 5235,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4957,
											"end": 5235,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "AND"
										},
										{
											"begin": 5209,
											"end": 5235,
											"name": "ISZERO"
										},
										{
											"begin": 5209,
											"end": 5235,
											"name": "ISZERO"
										},
										{
											"begin": 4957,
											"end": 5235,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4957,
											"end": 5235,
											"name": "JUMPDEST"
										},
										{
											"begin": 4939,
											"end": 5562,
											"name": "ISZERO"
										},
										{
											"begin": 4939,
											"end": 5562,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4939,
											"end": 5562,
											"name": "JUMPI"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "DUP1"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "DUP2"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "MSTORE"
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "ADDRESS"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "DUP3"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "ADD"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "MSTORE"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "SWAP1"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "DUP8"
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "AND"
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "SWAP2"
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "SWAP2"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "DUP1"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "DUP4"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "ADD"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "SWAP3"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "SWAP3"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "SWAP2"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "SWAP1"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "DUP3"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "SWAP1"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "SUB"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "ADD"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "DUP2"
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "DUP7"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "DUP1"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "POP"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "GAS"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "STATICCALL"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "POP"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "POP"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "POP"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "POP"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "MLOAD"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "MLOAD"
										},
										{
											"begin": 5270,
											"end": 5315,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5334,
											"end": 5343,
											"name": "DUP4"
										},
										{
											"begin": 5334,
											"end": 5343,
											"name": "ISZERO"
										},
										{
											"begin": 5330,
											"end": 5551,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5330,
											"end": 5551,
											"name": "JUMPI"
										},
										{
											"begin": 5514,
											"end": 5526,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5514,
											"end": 5526,
											"name": "SLOAD"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP1"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP2"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5514,
											"end": 5526,
											"name": "SWAP3"
										},
										{
											"begin": 5514,
											"end": 5526,
											"name": "DUP4"
										},
										{
											"begin": 5514,
											"end": 5526,
											"name": "AND"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP3"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "ADD"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "MSTORE"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP2"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "ADD"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP8"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "MSTORE"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "MLOAD"
										},
										{
											"begin": 5484,
											"end": 5513,
											"name": "SWAP2"
										},
										{
											"begin": 5484,
											"end": 5513,
											"name": "DUP8"
										},
										{
											"begin": 5484,
											"end": 5513,
											"name": "AND"
										},
										{
											"begin": 5484,
											"end": 5513,
											"name": "SWAP2"
										},
										{
											"begin": 5484,
											"end": 5513,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 5484,
											"end": 5513,
											"name": "SWAP2"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP1"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP3"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "ADD"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SWAP3"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SWAP3"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SWAP2"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP3"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "SUB"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "ADD"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP2"
										},
										{
											"begin": 5514,
											"end": 5526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5513,
											"name": "DUP8"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "DUP1"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "POP"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "GAS"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "CALL"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "POP"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "POP"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "POP"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "POP"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "MLOAD"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5484,
											"end": 5534,
											"name": "MLOAD"
										},
										{
											"begin": 5477,
											"end": 5535,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5477,
											"end": 5535,
											"name": "JUMPI"
										},
										{
											"begin": 5477,
											"end": 5535,
											"name": "INVALID"
										},
										{
											"begin": 5477,
											"end": 5535,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5477,
											"end": 5535,
											"name": "JUMPDEST"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "POP"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "POP"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "POP"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "SWAP2"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "SWAP1"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "POP"
										},
										{
											"begin": 4219,
											"end": 5569,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "JUMPDEST"
										},
										{
											"begin": 2331,
											"end": 2341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2391,
											"name": "DUP1"
										},
										{
											"begin": 2394,
											"end": 2409,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2414,
											"name": "DUP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "AND"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "DUP2"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "MSTORE"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "ADD"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "SWAP1"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "DUP2"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "MSTORE"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "ADD"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "KECCAK256"
										},
										{
											"begin": 2354,
											"end": 2415,
											"name": "SWAP1"
										},
										{
											"begin": 2354,
											"end": 2415,
											"name": "POP"
										},
										{
											"begin": 2426,
											"end": 2466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2485,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2505,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2486,
											"end": 2513,
											"name": "AND"
										},
										{
											"begin": 2486,
											"end": 2513,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "MLOAD"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP2"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "AND"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "SHL"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP2"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "MSTORE"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "ADD"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "MLOAD"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP1"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP4"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "SUB"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP2"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP7"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP1"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "GAS"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "STATICCALL"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "MLOAD"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP2"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "ADD"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "SWAP1"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP1"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "DUP1"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "MLOAD"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "SWAP1"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "ADD"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "SWAP1"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "SWAP3"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "SWAP2"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "SWAP1"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2486,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "AND"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "DUP2"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "MSTORE"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "ADD"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "SWAP1"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "DUP2"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "MSTORE"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "ADD"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2516,
											"name": "KECCAK256"
										},
										{
											"begin": 2426,
											"end": 2516,
											"name": "SWAP1"
										},
										{
											"begin": 2426,
											"end": 2516,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2586,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2587,
											"end": 2614,
											"name": "AND"
										},
										{
											"begin": 2587,
											"end": 2614,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "MLOAD"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "DUP2"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "AND"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "SHL"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "DUP2"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "MSTORE"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "ADD"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "MLOAD"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "DUP1"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "DUP4"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "SUB"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "DUP2"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "DUP7"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "DUP1"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "POP"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "GAS"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "STATICCALL"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "POP"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "POP"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "POP"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "POP"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "MLOAD"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "AND"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "DUP2"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "MSTORE"
										},
										{
											"begin": 2587,
											"end": 2616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "DUP2"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "ADD"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "SWAP2"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "SWAP1"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "SWAP2"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "MSTORE"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "KECCAK256"
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "DUP3"
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "SLOAD"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "SWAP1"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "AND"
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "ISZERO"
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "DUP1"
										},
										{
											"begin": 3001,
											"end": 3084,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3001,
											"end": 3084,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3051,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3051,
											"end": 3075,
											"name": "SLOAD"
										},
										{
											"begin": 3051,
											"end": 3075,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3051,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3051,
											"end": 3084,
											"name": "ISZERO"
										},
										{
											"begin": 3001,
											"end": 3084,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3001,
											"end": 3084,
											"name": "JUMPDEST"
										},
										{
											"begin": 3001,
											"end": 3168,
											"name": "DUP1"
										},
										{
											"begin": 3001,
											"end": 3168,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3001,
											"end": 3168,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3134,
											"end": 3168,
											"name": "DUP3"
										},
										{
											"begin": 3134,
											"end": 3168,
											"name": "SLOAD"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "DUP3"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3134,
											"end": 3168,
											"name": "SWAP2"
										},
										{
											"begin": 3134,
											"end": 3168,
											"name": "DUP3"
										},
										{
											"begin": 3134,
											"end": 3168,
											"name": "AND"
										},
										{
											"begin": 3134,
											"end": 3168,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SWAP1"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SWAP2"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "DIV"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SWAP1"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SWAP2"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "AND"
										},
										{
											"begin": 3101,
											"end": 3168,
											"name": "GT"
										},
										{
											"begin": 3001,
											"end": 3168,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3001,
											"end": 3168,
											"name": "JUMPDEST"
										},
										{
											"begin": 3001,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3001,
											"end": 3252,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3001,
											"end": 3252,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "DUP3"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "SLOAD"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "DUP2"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "SWAP2"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "AND"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "SWAP1"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "SWAP3"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "DIV"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "AND"
										},
										{
											"begin": 3185,
											"end": 3252,
											"name": "GT"
										},
										{
											"begin": 3001,
											"end": 3252,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3001,
											"end": 3252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2983,
											"end": 4204,
											"name": "ISZERO"
										},
										{
											"begin": 2983,
											"end": 4204,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2983,
											"end": 4204,
											"name": "JUMPI"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "DUP1"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "DUP2"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "MSTORE"
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "ADDRESS"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "DUP3"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "ADD"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "MSTORE"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "SWAP1"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP8"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "AND"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "SWAP2"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "SWAP2"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "DUP1"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "DUP4"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "ADD"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "SWAP3"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "SWAP3"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "SWAP2"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "SWAP1"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "DUP3"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "SWAP1"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "SUB"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "ADD"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "DUP2"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP7"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "DUP1"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "GAS"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "STATICCALL"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "MLOAD"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "MLOAD"
										},
										{
											"begin": 3287,
											"end": 3332,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "DUP4"
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "ISZERO"
										},
										{
											"begin": 3347,
											"end": 3693,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 3347,
											"end": 3693,
											"name": "JUMPI"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP1"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP2"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3584,
											"end": 3613,
											"name": "DUP8"
										},
										{
											"begin": 3584,
											"end": 3613,
											"name": "AND"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP3"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "ADD"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP2"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP1"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "MSTORE"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP3"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "ADD"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP8"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP1"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "MSTORE"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP2"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "MLOAD"
										},
										{
											"begin": 3584,
											"end": 3613,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3584,
											"end": 3613,
											"name": "SWAP2"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP1"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP3"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "ADD"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP3"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP3"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP1"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP2"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP1"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP3"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SWAP1"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "SUB"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "ADD"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3613,
											"name": "DUP8"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "DUP1"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "POP"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "GAS"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "CALL"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "POP"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "POP"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "POP"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "POP"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "MLOAD"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3584,
											"end": 3626,
											"name": "MLOAD"
										},
										{
											"begin": 3577,
											"end": 3627,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3577,
											"end": 3627,
											"name": "JUMPI"
										},
										{
											"begin": 3577,
											"end": 3627,
											"name": "INVALID"
										},
										{
											"begin": 3577,
											"end": 3627,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 3577,
											"end": 3627,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP1"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "226BF2D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP2"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3646,
											"end": 3671,
											"name": "DUP8"
										},
										{
											"begin": 3646,
											"end": 3671,
											"name": "AND"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP3"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "ADD"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP2"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "SWAP1"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "MSTORE"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP3"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "MLOAD"
										},
										{
											"begin": 3646,
											"end": 3671,
											"name": "SWAP1"
										},
										{
											"begin": 3646,
											"end": 3671,
											"name": "SWAP3"
										},
										{
											"begin": 3646,
											"end": 3671,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 3646,
											"end": 3671,
											"name": "SWAP3"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP1"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP3"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "ADD"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "SWAP4"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "SWAP2"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP3"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "SWAP1"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "SUB"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "ADD"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3671,
											"name": "DUP8"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "DUP1"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "GAS"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "CALL"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "MLOAD"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3693,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 3347,
											"end": 3693,
											"name": "JUMPDEST"
										},
										{
											"begin": 3816,
											"end": 3840,
											"name": "DUP2"
										},
										{
											"begin": 3816,
											"end": 3840,
											"name": "SLOAD"
										},
										{
											"begin": 3816,
											"end": 3840,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3816,
											"end": 3840,
											"name": "AND"
										},
										{
											"begin": 3812,
											"end": 3944,
											"name": "ISZERO"
										},
										{
											"begin": 3812,
											"end": 3944,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3812,
											"end": 3944,
											"name": "JUMPI"
										},
										{
											"begin": 3898,
											"end": 3928,
											"name": "DUP2"
										},
										{
											"begin": 3898,
											"end": 3928,
											"name": "SLOAD"
										},
										{
											"begin": 3861,
											"end": 3928,
											"name": "DUP4"
										},
										{
											"begin": 3861,
											"end": 3928,
											"name": "SLOAD"
										},
										{
											"begin": 3898,
											"end": 3928,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3898,
											"end": 3928,
											"name": "SWAP1"
										},
										{
											"begin": 3898,
											"end": 3928,
											"name": "SWAP2"
										},
										{
											"begin": 3898,
											"end": 3928,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3898,
											"end": 3928,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3861,
											"end": 3928,
											"name": "SWAP1"
										},
										{
											"begin": 3861,
											"end": 3928,
											"name": "SWAP2"
										},
										{
											"begin": 3861,
											"end": 3928,
											"name": "AND"
										},
										{
											"begin": 3861,
											"end": 3928,
											"name": "OR"
										},
										{
											"begin": 3861,
											"end": 3928,
											"name": "DUP4"
										},
										{
											"begin": 3861,
											"end": 3928,
											"name": "SSTORE"
										},
										{
											"begin": 3812,
											"end": 3944,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 3812,
											"end": 3944,
											"name": "JUMPDEST"
										},
										{
											"begin": 4065,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 4065,
											"end": 4089,
											"name": "SLOAD"
										},
										{
											"begin": 4065,
											"end": 4089,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4065,
											"end": 4089,
											"name": "AND"
										},
										{
											"begin": 4061,
											"end": 4193,
											"name": "ISZERO"
										},
										{
											"begin": 4061,
											"end": 4193,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4061,
											"end": 4193,
											"name": "JUMPI"
										},
										{
											"begin": 4147,
											"end": 4177,
											"name": "SLOAD"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "DUP3"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "DUP2"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "AND"
										},
										{
											"begin": 4147,
											"end": 4177,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4147,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 4147,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 4147,
											"end": 4177,
											"name": "DIV"
										},
										{
											"begin": 4147,
											"end": 4177,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "MUL"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "OR"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 4110,
											"end": 4177,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "SWAP2"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 4211,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "MSTORE"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP2"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "MSTORE"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "KECCAK256"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SLOAD"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP2"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "AND"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "AND"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "DUP3"
										},
										{
											"begin": 499,
											"end": 558,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "AND"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 395,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "JUMPDEST"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "DUP3"
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "MLOAD"
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "DUP2"
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "LT"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "ISZERO"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "JUMPI"
										},
										{
											"begin": 2215,
											"end": 2256,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "DUP4"
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "DUP3"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "DUP2"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "MLOAD"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "DUP2"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "LT"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "JUMPI"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "INVALID"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "JUMPDEST"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "MUL"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "ADD"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "ADD"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "MLOAD"
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP4"
										},
										{
											"begin": 2215,
											"end": 2236,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2215,
											"end": 2256,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2256,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2215,
											"end": 2256,
											"name": "JUMPDEST"
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "ADD"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "JUMP"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "JUMPDEST"
										},
										{
											"begin": 2163,
											"end": 2268,
											"name": "POP"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "POP"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "POP"
										},
										{
											"begin": 2074,
											"end": 2275,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "JUMPDEST"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "DUP2"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "JUMPDEST"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "AND"
										},
										{
											"begin": 1248,
											"end": 1258,
											"name": "CALLER"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "EQ"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "JUMPI"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "MSTORE"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP1"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP1"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP3"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "SUB"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP3"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "MSTORE"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "MSTORE"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP1"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH data",
											"value": "B4BED03E1AE11DC2C3FB104A5833337D688EBAF962183CAA90F79F56B534444F"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "SWAP2"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "CODECOPY"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "SWAP2"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "MLOAD"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "DUP1"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "SWAP2"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "SUB"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "SWAP1"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "REVERT"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 1240,
											"end": 1313,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "DUP3"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "AND"
										},
										{
											"begin": 1324,
											"end": 1363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "DUP2"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "MSTORE"
										},
										{
											"begin": 1366,
											"end": 1382,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "MSTORE"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "KECCAK256"
										},
										{
											"begin": 1479,
											"end": 1502,
											"name": "DUP1"
										},
										{
											"begin": 1479,
											"end": 1502,
											"name": "SLOAD"
										},
										{
											"begin": 1479,
											"end": 1502,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1479,
											"end": 1502,
											"name": "AND"
										},
										{
											"begin": 1468,
											"end": 1502,
											"name": "ISZERO"
										},
										{
											"begin": 1468,
											"end": 1502,
											"name": "ISZERO"
										},
										{
											"begin": 1468,
											"end": 1502,
											"name": "DUP3"
										},
										{
											"begin": 1468,
											"end": 1502,
											"name": "ISZERO"
										},
										{
											"begin": 1468,
											"end": 1502,
											"name": "ISZERO"
										},
										{
											"begin": 1468,
											"end": 1502,
											"name": "EQ"
										},
										{
											"begin": 1464,
											"end": 2059,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 1464,
											"end": 2059,
											"name": "JUMPI"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "AND"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP3"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ISZERO"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ISZERO"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "OR"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP3"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1847,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1847,
											"end": 1876,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1847,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1843,
											"end": 2048,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1843,
											"end": 2048,
											"name": "JUMPI"
										},
										{
											"begin": 1902,
											"end": 1935,
											"name": "DUP1"
										},
										{
											"begin": 1902,
											"end": 1935,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1902,
											"end": 1935,
											"name": "AND"
										},
										{
											"begin": 1902,
											"end": 1935,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1902,
											"end": 1935,
											"name": "OR"
										},
										{
											"begin": 1902,
											"end": 1935,
											"name": "DUP2"
										},
										{
											"begin": 1902,
											"end": 1935,
											"name": "SSTORE"
										},
										{
											"begin": 1843,
											"end": 2048,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 1843,
											"end": 2048,
											"name": "JUMP"
										},
										{
											"begin": 1843,
											"end": 2048,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1843,
											"end": 2048,
											"name": "JUMPDEST"
										},
										{
											"begin": 1961,
											"end": 1977,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 2048,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 1957,
											"end": 2048,
											"name": "JUMPI"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP1"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP1"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP4"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DIV"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP3"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "AND"
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "ADD"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SWAP1"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SWAP2"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "AND"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SWAP1"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SWAP2"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "AND"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "OR"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP2"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SSTORE"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 2066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "MSTORE"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP2"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "MSTORE"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "KECCAK256"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP3"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DIV"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "DUP3"
										},
										{
											"begin": 679,
											"end": 736,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "AND"
										},
										{
											"begin": 1048,
											"end": 1058,
											"name": "CALLER"
										},
										{
											"begin": 1048,
											"end": 1067,
											"name": "EQ"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "JUMPI"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP3"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP3"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH data",
											"value": "763FF1F102BADA5AA52B1CEC87D5B4C73DDCE91823CE8EEEA8FEF7747BDD3226"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "SWAP2"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "CODECOPY"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "SWAP2"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "SWAP2"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "REVERT"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 1040,
											"end": 1107,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SWAP3"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SWAP3"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "AND"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "OR"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "SSTORE"
										},
										{
											"begin": 974,
											"end": 1154,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"763FF1F102BADA5AA52B1CEC87D5B4C73DDCE91823CE8EEEA8FEF7747BDD3226": "466565546f3a3a736574466565526563697069656e743a206e6f7420616c6c6f776564",
										"B4BED03E1AE11DC2C3FB104A5833337D688EBAF962183CAA90F79F56B534444F": "466565546f3a3a757064617465546f6b656e416c6c6f7753746174653a206e6f7420616c6c6f776564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"claim(address)": "1e83409a",
							"feeRecipient()": "46904840",
							"owner()": "8da5cb5b",
							"pairAllowStates(address)": "e359f0ed",
							"renounce(address)": "1f76a7af",
							"setFeeRecipient(address)": "e74b981b",
							"setOwner(address)": "13af4035",
							"tokenAllowStates(address)": "3e2f3f2b",
							"updateTokenAllowState(address,bool)": "df8ca76a",
							"updateTokenAllowStates(address[],bool)": "8d976172"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pairAllowStates\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0DisallowCount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1DisallowCount\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"renounce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeRecipient_\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenAllowStates\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"disallowCount\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"updateTokenAllowState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"updateTokenAllowStates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/FeeTo.sol\":\"FeeTo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/FeeTo.sol\":{\"keccak256\":\"0x320b6725979a7acddb31993baca204929f5c745d4d3a0d797b226bf092ce3c02\",\"urls\":[\"bzz-raw://959424409aed21a34e1446c728a2110f2e4361c08788de1f58f97562e3c215ff\",\"dweb:/ipfs/Qmawx3QdKXCPLcuqnRWzrHmtFrv8JRykp1Kz72PrxQNxQ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "v2-core-master/contracts/FeeTo.sol:FeeTo",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "v2-core-master/contracts/FeeTo.sol:FeeTo",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 14,
								"contract": "v2-core-master/contracts/FeeTo.sol:FeeTo",
								"label": "tokenAllowStates",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(TokenAllowState)10_storage)"
							},
							{
								"astId": 23,
								"contract": "v2-core-master/contracts/FeeTo.sol:FeeTo",
								"label": "pairAllowStates",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(PairAllowState)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(PairAllowState)19_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct FeeTo.PairAllowState)",
								"numberOfBytes": "32",
								"value": "t_struct(PairAllowState)19_storage"
							},
							"t_mapping(t_address,t_struct(TokenAllowState)10_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct FeeTo.TokenAllowState)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenAllowState)10_storage"
							},
							"t_struct(PairAllowState)19_storage": {
								"encoding": "inplace",
								"label": "struct FeeTo.PairAllowState",
								"members": [
									{
										"astId": 16,
										"contract": "v2-core-master/contracts/FeeTo.sol:FeeTo",
										"label": "token0DisallowCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 18,
										"contract": "v2-core-master/contracts/FeeTo.sol:FeeTo",
										"label": "token1DisallowCount",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenAllowState)10_storage": {
								"encoding": "inplace",
								"label": "struct FeeTo.TokenAllowState",
								"members": [
									{
										"astId": 7,
										"contract": "v2-core-master/contracts/FeeTo.sol:FeeTo",
										"label": "allowed",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 9,
										"contract": "v2-core-master/contracts/FeeTo.sol:FeeTo",
										"label": "disallowCount",
										"offset": 1,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IUniswapV2Pair": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/FeeTo.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/FeeTo.sol\":{\"keccak256\":\"0x320b6725979a7acddb31993baca204929f5c745d4d3a0d797b226bf092ce3c02\",\"urls\":[\"bzz-raw://959424409aed21a34e1446c728a2110f2e4361c08788de1f58f97562e3c215ff\",\"dweb:/ipfs/Qmawx3QdKXCPLcuqnRWzrHmtFrv8JRykp1Kz72PrxQNxQ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"v2-core-master/contracts/FeeTo.sol": {
				"ast": {
					"absolutePath": "v2-core-master/contracts/FeeTo.sol",
					"exportedSymbols": {
						"FeeTo": [
							352
						],
						"IUniswapV2Pair": [
							388
						]
					},
					"id": 389,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "71:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352
							],
							"name": "FeeTo",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "341:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "feeRecipient",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "368:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "368:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "FeeTo.TokenAllowState",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 7,
											"name": "allowed",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "438:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 6,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "438:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "disallowCount",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "464:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 8,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "464:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "TokenAllowState",
									"nodeType": "StructDefinition",
									"scope": 352,
									"src": "404:89:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 14,
									"name": "tokenAllowStates",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "499:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenAllowState_$10_storage_$",
										"typeString": "mapping(address => struct FeeTo.TokenAllowState)"
									},
									"typeName": {
										"id": 13,
										"keyType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "507:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "499:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenAllowState_$10_storage_$",
											"typeString": "mapping(address => struct FeeTo.TokenAllowState)"
										},
										"valueType": {
											"contractScope": null,
											"id": 12,
											"name": "TokenAllowState",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 10,
											"src": "518:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
												"typeString": "struct FeeTo.TokenAllowState"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "FeeTo.PairAllowState",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"name": "token0DisallowCount",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "600:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 15,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "600:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"name": "token1DisallowCount",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "638:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 17,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "638:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PairAllowState",
									"nodeType": "StructDefinition",
									"scope": 352,
									"src": "567:106:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "pairAllowStates",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "679:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PairAllowState_$19_storage_$",
										"typeString": "mapping(address => struct FeeTo.PairAllowState)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "687:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "679:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PairAllowState_$19_storage_$",
											"typeString": "mapping(address => struct FeeTo.PairAllowState)"
										},
										"valueType": {
											"contractScope": null,
											"id": 21,
											"name": "PairAllowState",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 19,
											"src": "698:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
												"typeString": "struct FeeTo.PairAllowState"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "780:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 28,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "791:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 29,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "799:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "791:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "791:14:0"
											}
										]
									},
									"documentation": null,
									"id": 33,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "757:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "756:16:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:0"
									},
									"scope": 352,
									"src": "745:68:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "862:104:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "881:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "881:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "895:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "881:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f3a3a7365744f776e65723a206e6f7420616c6c6f776564",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "902:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffbc268fdb44d4e854a31c5d9fb81108092e719fe7f0d655f595d693baa37a2",
																"typeString": "literal_string \"FeeTo::setOwner: not allowed\""
															},
															"value": "FeeTo::setOwner: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffbc268fdb44d4e854a31c5d9fb81108092e719fe7f0d655f595d693baa37a2",
																"typeString": "literal_string \"FeeTo::setOwner: not allowed\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															406,
															407
														],
														"referencedDeclaration": 407,
														"src": "873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "873:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "944:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "952:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "944:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "944:14:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "839:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "838:16:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:0:0"
									},
									"scope": 352,
									"src": "821:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1029:125:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1048:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1048:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 59,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1062:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1048:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f3a3a736574466565526563697069656e743a206e6f7420616c6c6f776564",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_763ff1f102bada5aa52b1cec87d5b4c73ddce91823ce8eeea8fef7747bdd3226",
																"typeString": "literal_string \"FeeTo::setFeeRecipient: not allowed\""
															},
															"value": "FeeTo::setFeeRecipient: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_763ff1f102bada5aa52b1cec87d5b4c73ddce91823ce8eeea8fef7747bdd3226",
																"typeString": "literal_string \"FeeTo::setFeeRecipient: not allowed\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															406,
															407
														],
														"referencedDeclaration": 407,
														"src": "1040:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1040:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1040:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1118:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "feeRecipient_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1133:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1118:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1118:28:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeRecipient",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "feeRecipient_",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "999:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "998:23:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1029:0:0"
									},
									"scope": 352,
									"src": "974:180:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1229:837:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1248:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1248:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 79,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1262:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466565546f3a3a757064617465546f6b656e416c6c6f7753746174653a206e6f7420616c6c6f776564",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1269:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4bed03e1ae11dc2c3fb104a5833337d688ebaf962183caa90f79f56b534444f",
																"typeString": "literal_string \"FeeTo::updateTokenAllowState: not allowed\""
															},
															"value": "FeeTo::updateTokenAllowState: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4bed03e1ae11dc2c3fb104a5833337d688ebaf962183caa90f79f56b534444f",
																"typeString": "literal_string \"FeeTo::updateTokenAllowState: not allowed\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															406,
															407
														],
														"referencedDeclaration": 407,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1240:73:0"
											},
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"name": "tokenAllowState",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "1324:39:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
															"typeString": "struct FeeTo.TokenAllowState"
														},
														"typeName": {
															"contractScope": null,
															"id": 84,
															"name": "TokenAllowState",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "1324:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																"typeString": "struct FeeTo.TokenAllowState"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 89,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 86,
														"name": "tokenAllowStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1366:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenAllowState_$10_storage_$",
															"typeString": "mapping(address => struct FeeTo.TokenAllowState storage ref)"
														}
													},
													"id": 88,
													"indexExpression": {
														"argumentTypes": null,
														"id": 87,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1383:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1366:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAllowState_$10_storage",
														"typeString": "struct FeeTo.TokenAllowState storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:65:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 90,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 91,
															"name": "tokenAllowState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1479:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																"typeString": "struct FeeTo.TokenAllowState storage pointer"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "allowed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1479:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1468:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 124,
												"nodeType": "IfStatement",
												"src": "1464:595:0",
												"trueBody": {
													"id": 123,
													"nodeType": "Block",
													"src": "1504:555:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 94,
																		"name": "tokenAllowState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1519:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																			"typeString": "struct FeeTo.TokenAllowState storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "allowed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "1519:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1545:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1519:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "1519:33:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 100,
																		"name": "tokenAllowState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1847:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																			"typeString": "struct FeeTo.TokenAllowState storage pointer"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "disallowCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "1847:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1880:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1847:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 111,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 73,
																		"src": "1961:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "66616c7365",
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1972:5:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "1961:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 121,
																"nodeType": "IfStatement",
																"src": "1957:91:0",
																"trueBody": {
																	"id": 120,
																	"nodeType": "Block",
																	"src": "1979:69:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 114,
																						"name": "tokenAllowState",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 85,
																						"src": "1998:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																							"typeString": "struct FeeTo.TokenAllowState storage pointer"
																						}
																					},
																					"id": 116,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "disallowCount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 9,
																					"src": "1998:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2031:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1998:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"id": 119,
																			"nodeType": "ExpressionStatement",
																			"src": "1998:34:0"
																		}
																	]
																}
															},
															"id": 122,
															"nodeType": "IfStatement",
															"src": "1843:205:0",
															"trueBody": {
																"id": 110,
																"nodeType": "Block",
																"src": "1883:68:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 104,
																					"name": "tokenAllowState",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 85,
																					"src": "1902:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																						"typeString": "struct FeeTo.TokenAllowState storage pointer"
																					}
																				},
																				"id": 106,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "disallowCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 9,
																				"src": "1902:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1934:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "1902:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 109,
																		"nodeType": "ExpressionStatement",
																		"src": "1902:33:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenAllowState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1193:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"name": "allowed",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1208:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1192:29:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:0"
									},
									"scope": 352,
									"src": "1162:904:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "2152:123:0",
										"statements": [
											{
												"body": {
													"id": 151,
													"nodeType": "Block",
													"src": "2200:68:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 145,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "2237:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 147,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 146,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 135,
																			"src": "2244:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2237:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 148,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "2248:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 144,
																	"name": "updateTokenAllowState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "2215:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2215:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "2215:41:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 138,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2180:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2180:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2176:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"initializationExpression": {
													"assignments": [
														135
													],
													"declarations": [
														{
															"constant": false,
															"id": 135,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 152,
															"src": "2168:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 134,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2168:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 136,
													"initialValue": null,
													"nodeType": "VariableDeclarationStatement",
													"src": "2168:6:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2195:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 141,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "2195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 143,
													"nodeType": "ExpressionStatement",
													"src": "2195:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2163:105:0"
											}
										]
									},
									"documentation": null,
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenAllowStates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2106:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 127,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2106:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 128,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2106:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"name": "allowed",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2131:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2105:39:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2152:0:0"
									},
									"scope": 352,
									"src": "2074:201:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "2343:1868:0",
										"statements": [
											{
												"assignments": [
													162
												],
												"declarations": [
													{
														"constant": false,
														"id": 162,
														"name": "pairAllowState",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "2354:37:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
															"typeString": "struct FeeTo.PairAllowState"
														},
														"typeName": {
															"contractScope": null,
															"id": 161,
															"name": "PairAllowState",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 19,
															"src": "2354:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
																"typeString": "struct FeeTo.PairAllowState"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 163,
														"name": "pairAllowStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2394:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PairAllowState_$19_storage_$",
															"typeString": "mapping(address => struct FeeTo.PairAllowState storage ref)"
														}
													},
													"id": 165,
													"indexExpression": {
														"argumentTypes": null,
														"id": 164,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2410:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2394:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PairAllowState_$19_storage",
														"typeString": "struct FeeTo.PairAllowState storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2354:61:0"
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"name": "token0AllowState",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "2426:40:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
															"typeString": "struct FeeTo.TokenAllowState"
														},
														"typeName": {
															"contractScope": null,
															"id": 167,
															"name": "TokenAllowState",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "2426:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																"typeString": "struct FeeTo.TokenAllowState"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 169,
														"name": "tokenAllowStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2469:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenAllowState_$10_storage_$",
															"typeString": "mapping(address => struct FeeTo.TokenAllowState storage ref)"
														}
													},
													"id": 175,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 171,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "2501:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 170,
																	"name": "IUniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2486:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																		"typeString": "type(contract IUniswapV2Pair)"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2486:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 357,
															"src": "2486:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2486:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2469:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAllowState_$10_storage",
														"typeString": "struct FeeTo.TokenAllowState storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2426:90:0"
											},
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"name": "token1AllowState",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "2527:40:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
															"typeString": "struct FeeTo.TokenAllowState"
														},
														"typeName": {
															"contractScope": null,
															"id": 177,
															"name": "TokenAllowState",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "2527:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																"typeString": "struct FeeTo.TokenAllowState"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 186,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 179,
														"name": "tokenAllowStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2570:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenAllowState_$10_storage_$",
															"typeString": "mapping(address => struct FeeTo.TokenAllowState storage ref)"
														}
													},
													"id": 185,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 181,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "2602:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 180,
																	"name": "IUniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2587:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																		"typeString": "type(contract IUniswapV2Pair)"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2587:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 362,
															"src": "2587:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2587:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2570:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAllowState_$10_storage",
														"typeString": "struct FeeTo.TokenAllowState storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2527:90:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 187,
																		"name": "token0AllowState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 168,
																		"src": "3001:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																			"typeString": "struct FeeTo.TokenAllowState storage pointer"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "3001:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3029:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3001:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 191,
																		"name": "token1AllowState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 178,
																		"src": "3051:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																			"typeString": "struct FeeTo.TokenAllowState storage pointer"
																		}
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "3051:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3079:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3051:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3001:83:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 196,
																	"name": "token0AllowState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "3101:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																		"typeString": "struct FeeTo.TokenAllowState storage pointer"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "disallowCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 9,
																"src": "3101:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 198,
																	"name": "pairAllowState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "3134:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
																		"typeString": "struct FeeTo.PairAllowState storage pointer"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0DisallowCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "3134:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3101:67:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3001:167:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 202,
																"name": "token1AllowState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "3185:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																	"typeString": "struct FeeTo.TokenAllowState storage pointer"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "disallowCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "3185:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 204,
																"name": "pairAllowState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "3218:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
																	"typeString": "struct FeeTo.PairAllowState storage pointer"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token1DisallowCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "3218:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "3185:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3001:251:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 264,
												"nodeType": "IfStatement",
												"src": "2983:1221:0",
												"trueBody": {
													"id": 263,
													"nodeType": "Block",
													"src": "3264:940:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "3279:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 214,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 417,
																					"src": "3326:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_FeeTo_$352",
																						"typeString": "contract FeeTo"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_FeeTo_$352",
																						"typeString": "contract FeeTo"
																					}
																				],
																				"id": 213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3318:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3318:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 210,
																					"name": "pair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 156,
																					"src": "3302:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 209,
																				"name": "IUniswapV2Pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "3287:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																					"typeString": "type(contract IUniswapV2Pair)"
																				}
																			},
																			"id": 211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3287:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																				"typeString": "contract IUniswapV2Pair"
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 369,
																		"src": "3287:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3287:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3279:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 218,
															"nodeType": "ExpressionStatement",
															"src": "3279:53:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "3351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3359:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3351:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 240,
															"nodeType": "IfStatement",
															"src": "3347:346:0",
															"trueBody": {
																"id": 239,
																"nodeType": "Block",
																"src": "3362:331:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 227,
																							"name": "pair",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 156,
																							"src": "3614:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 228,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 159,
																							"src": "3620:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 224,
																									"name": "pair",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 156,
																									"src": "3599:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 223,
																								"name": "IUniswapV2Pair",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 388,
																								"src": "3584:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																									"typeString": "type(contract IUniswapV2Pair)"
																								}
																							},
																							"id": 225,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3584:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																								"typeString": "contract IUniswapV2Pair"
																							}
																						},
																						"id": 226,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 378,
																						"src": "3584:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function (address,uint256) external returns (bool)"
																						}
																					},
																					"id": 229,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3584:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 222,
																				"name": "assert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "3577:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3577:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 231,
																		"nodeType": "ExpressionStatement",
																		"src": "3577:50:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 236,
																					"name": "pair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 156,
																					"src": "3672:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 233,
																							"name": "pair",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 156,
																							"src": "3661:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 232,
																						"name": "IUniswapV2Pair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 388,
																						"src": "3646:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																							"typeString": "type(contract IUniswapV2Pair)"
																						}
																					},
																					"id": 234,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3646:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																						"typeString": "contract IUniswapV2Pair"
																					}
																				},
																				"id": 235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "burn",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 387,
																				"src": "3646:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
																					"typeString": "function (address) external returns (uint256,uint256)"
																				}
																			},
																			"id": 237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3646:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"id": 238,
																		"nodeType": "ExpressionStatement",
																		"src": "3646:31:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 241,
																	"name": "token0AllowState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "3816:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																		"typeString": "struct FeeTo.TokenAllowState storage pointer"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "3816:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 251,
															"nodeType": "IfStatement",
															"src": "3812:132:0",
															"trueBody": {
																"id": 250,
																"nodeType": "Block",
																"src": "3842:102:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 243,
																					"name": "pairAllowState",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 162,
																					"src": "3861:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
																						"typeString": "struct FeeTo.PairAllowState storage pointer"
																					}
																				},
																				"id": 245,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "token0DisallowCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 16,
																				"src": "3861:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 246,
																					"name": "token0AllowState",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 168,
																					"src": "3898:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																						"typeString": "struct FeeTo.TokenAllowState storage pointer"
																					}
																				},
																				"id": 247,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "disallowCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 9,
																				"src": "3898:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "3861:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 249,
																		"nodeType": "ExpressionStatement",
																		"src": "3861:67:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 252,
																	"name": "token1AllowState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "4065:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																		"typeString": "struct FeeTo.TokenAllowState storage pointer"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "4065:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 262,
															"nodeType": "IfStatement",
															"src": "4061:132:0",
															"trueBody": {
																"id": 261,
																"nodeType": "Block",
																"src": "4091:102:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 254,
																					"name": "pairAllowState",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 162,
																					"src": "4110:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
																						"typeString": "struct FeeTo.PairAllowState storage pointer"
																					}
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "token1DisallowCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 18,
																				"src": "4110:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 257,
																					"name": "token1AllowState",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "4147:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																						"typeString": "struct FeeTo.TokenAllowState storage pointer"
																					}
																				},
																				"id": 258,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "disallowCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 9,
																				"src": "4147:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "4110:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 260,
																		"nodeType": "ExpressionStatement",
																		"src": "4110:67:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2300:14:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2331:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2331:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2330:12:0"
									},
									"scope": 352,
									"src": "2283:1928:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "4276:1293:0",
										"statements": [
											{
												"assignments": [
													274
												],
												"declarations": [
													{
														"constant": false,
														"id": 274,
														"name": "pairAllowState",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "4287:37:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
															"typeString": "struct FeeTo.PairAllowState"
														},
														"typeName": {
															"contractScope": null,
															"id": 273,
															"name": "PairAllowState",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 19,
															"src": "4287:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
																"typeString": "struct FeeTo.PairAllowState"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 275,
														"name": "pairAllowStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "4327:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PairAllowState_$19_storage_$",
															"typeString": "mapping(address => struct FeeTo.PairAllowState storage ref)"
														}
													},
													"id": 277,
													"indexExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "4343:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4327:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PairAllowState_$19_storage",
														"typeString": "struct FeeTo.PairAllowState storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4287:61:0"
											},
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"name": "token0AllowState",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "4359:40:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
															"typeString": "struct FeeTo.TokenAllowState"
														},
														"typeName": {
															"contractScope": null,
															"id": 279,
															"name": "TokenAllowState",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "4359:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																"typeString": "struct FeeTo.TokenAllowState"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 281,
														"name": "tokenAllowStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "4402:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenAllowState_$10_storage_$",
															"typeString": "mapping(address => struct FeeTo.TokenAllowState storage ref)"
														}
													},
													"id": 287,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 283,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "4434:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 282,
																	"name": "IUniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "4419:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																		"typeString": "type(contract IUniswapV2Pair)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4419:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 357,
															"src": "4419:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4419:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4402:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAllowState_$10_storage",
														"typeString": "struct FeeTo.TokenAllowState storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4359:90:0"
											},
											{
												"assignments": [
													290
												],
												"declarations": [
													{
														"constant": false,
														"id": 290,
														"name": "token1AllowState",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "4460:40:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
															"typeString": "struct FeeTo.TokenAllowState"
														},
														"typeName": {
															"contractScope": null,
															"id": 289,
															"name": "TokenAllowState",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "4460:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																"typeString": "struct FeeTo.TokenAllowState"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 291,
														"name": "tokenAllowStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "4503:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenAllowState_$10_storage_$",
															"typeString": "mapping(address => struct FeeTo.TokenAllowState storage ref)"
														}
													},
													"id": 297,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 293,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "4535:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 292,
																	"name": "IUniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "4520:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																		"typeString": "type(contract IUniswapV2Pair)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4520:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 362,
															"src": "4520:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4520:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4503:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAllowState_$10_storage",
														"typeString": "struct FeeTo.TokenAllowState storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4460:90:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 299,
																		"name": "token0AllowState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "4957:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																			"typeString": "struct FeeTo.TokenAllowState storage pointer"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "4957:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 301,
																		"name": "token1AllowState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "4998:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																			"typeString": "struct FeeTo.TokenAllowState storage pointer"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "4998:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4957:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 304,
																		"name": "token0AllowState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "5039:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																			"typeString": "struct FeeTo.TokenAllowState storage pointer"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "disallowCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5039:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 306,
																		"name": "pairAllowState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "5073:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
																			"typeString": "struct FeeTo.PairAllowState storage pointer"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token0DisallowCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "5073:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "5039:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4957:150:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 310,
																	"name": "token1AllowState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "5124:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenAllowState_$10_storage_ptr",
																		"typeString": "struct FeeTo.TokenAllowState storage pointer"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "disallowCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 9,
																"src": "5124:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 312,
																	"name": "pairAllowState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "5158:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PairAllowState_$19_storage_ptr",
																		"typeString": "struct FeeTo.PairAllowState storage pointer"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1DisallowCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 18,
																"src": "5158:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "5124:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4957:235:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 316,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "5209:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5233:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5225:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5225:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "5209:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4957:278:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 349,
												"nodeType": "IfStatement",
												"src": "4939:623:0",
												"trueBody": {
													"id": 348,
													"nodeType": "Block",
													"src": "5247:315:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 322,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "5262:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 328,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 417,
																					"src": "5309:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_FeeTo_$352",
																						"typeString": "contract FeeTo"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_FeeTo_$352",
																						"typeString": "contract FeeTo"
																					}
																				],
																				"id": 327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5301:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5301:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 324,
																					"name": "pair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "5285:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 323,
																				"name": "IUniswapV2Pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "5270:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																					"typeString": "type(contract IUniswapV2Pair)"
																				}
																			},
																			"id": 325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5270:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																				"typeString": "contract IUniswapV2Pair"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 369,
																		"src": "5270:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5270:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5262:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "5262:53:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "5334:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5342:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5334:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 347,
															"nodeType": "IfStatement",
															"src": "5330:221:0",
															"trueBody": {
																"id": 346,
																"nodeType": "Block",
																"src": "5345:206:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 341,
																							"name": "feeRecipient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5,
																							"src": "5514:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 342,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 271,
																							"src": "5528:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 338,
																									"name": "pair",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 268,
																									"src": "5499:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 337,
																								"name": "IUniswapV2Pair",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 388,
																								"src": "5484:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$388_$",
																									"typeString": "type(contract IUniswapV2Pair)"
																								}
																							},
																							"id": 339,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5484:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV2Pair_$388",
																								"typeString": "contract IUniswapV2Pair"
																							}
																						},
																						"id": 340,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 378,
																						"src": "5484:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function (address,uint256) external returns (bool)"
																						}
																					},
																					"id": 343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5484:50:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 336,
																				"name": "assert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "5477:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5477:58:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 345,
																		"nodeType": "ExpressionStatement",
																		"src": "5477:58:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "4234:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4233:14:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "4264:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4263:12:0"
									},
									"scope": 352,
									"src": "4219:1350:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 389,
							"src": "319:5253:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5623:2:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5648:9:0"
									},
									"scope": 388,
									"src": "5608:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5679:2:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "5705:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5704:9:0"
									},
									"scope": 388,
									"src": "5664:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5739:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5738:15:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5777:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5776:6:0"
									},
									"scope": 388,
									"src": "5720:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "5807:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "5819:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5806:24:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "5849:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5849:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5848:6:0"
									},
									"scope": 388,
									"src": "5789:66:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5875:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5874:12:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5905:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5919:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5919:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5904:28:0"
									},
									"scope": 388,
									"src": "5861:72:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "5576:360:0"
						}
					],
					"src": "71:5865:0"
				},
				"id": 0
			}
		}
	}
}